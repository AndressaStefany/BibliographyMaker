{
  "tags_description": [
    {
      "name": "near-tsp",
      "description": "Variant of the TSP problem. Objective to reduce the length of a tour with specific constraints."
    },
    {
      "name": "different-problem",
      "description": "Completely different than the tsp"
    },
    {
      "name": "same-heuristic",
      "description": "Use the 2 opt heuristic as defined in First vs Best Improvement: an empirical study"
    },
    {
      "name": "diff-algorithm",
      "description": "Use a different algorithm as presented in First vs Best Improvement: an empirical study.  In additional_infos the algorithm used"
    },
    {
      "name": "not-follow-FIvsBI",
      "description": "does not follow the conclusion of the paper first vs best improvement. relevant_text gives th id in the relevant_text list of the text that support this affirmation"
    },
    {
      "name": "useDirect-FIvsBI",
      "description": "use directly the conclusions of First vs Best Improvement: an empirical study. relevant_text gives the id in the relevant_text list of the text that support this affirmation"
    },
    {
      "name": "NL",
      "description": "use the neighorhood list implementation of the algorithm"
    },
    {
      "name": "CL",
      "description": "use the classical implementation of the algorithm (without neighborhood list)"
    },
    {
      "name": "mention-concl-FIvsBI",
      "description": "mention (explicitely or implicitely) the conclusion of the paper first vs best improvement. relevant_text gives the id in the relevant_text list of the text that support this affirmation. The goal of this tag is to assess a more global impact of the publication that mentionned the result of FIvs BI and not only use them in the core of their methodology"
    },
    {
      "name": "dontUse",
      "description": "paper that does not mention or use the property initialization- algorithm to choose"
    },
    {
      "name": "notUsedInPaper",
      "description": "paper that does not use the property initialization- algorithm in the algorithm proposed. Relevant text and why required"
    },
    {
      "name": "redoExp",
      "description": "paper that redo the experiment for the same problem or for a different one. For the same algorithm or an other"
    },
    {
      "name": "sameRes",
      "description": "the paper has done the expirements has tested multiple of the following choices: FI initialization random, FI  initialization greedy, BI random initialization, BI greedy initialization. and has found results supporting conclusion of First vs Best Improvement: an empirical study"
    },
    {
      "name": "diffRes",
      "description": "the paper has done the expirements has tested multiple of the following choices: FI initialization random, FI  initialization greedy, BI random initialization, BI greedy initialization. and has found opposite results supporting conclusion of First vs Best Improvement: an empirical study"
    },
    {
      "name": "notSure",
      "description": "indicates that one element for this sample is not sure. the precise element is under what in additionnal informations"
    },
    {
      "name": "exclAccess",
      "description": "Excluded for cause of paywall"
    },
    {
      "name": "exclLanguage",
      "description": "Excluded for cause of langugage"
    },
    {
      "name": "deadlink",
      "description": "Cannot access to paper due to deadlink"
    },
    {
      "name": "exclBook",
      "description": "Excluded as the citation is done in a book"
    },
    {
      "name": "notCited",
      "description": "Paper FIvsBI not cited in the paper"
    }
  ],
  "types": [
    {
      "name": "paper",
      "description": "most present paper in this bibliography where there is one main problem and an improvement/study on one or multiple algorithms."
    },
    {
      "name": "survey",
      "description": "litterature review without any algorithms with results brought by the publication only"
    }
  ],
  "articles": [
    {
      "name": "A general variable neighborhood search for the one-commodity pickup-and-delivery travelling salesman problem.",
      "url": "https://reader.elsevier.com/reader/sd/pii/S0377221712000719?token=C0DF82AFB5CEDD405C7998A590B32BD7CB8564BD37D5EFF26616A7151239E01D1B010A5E5C3A6979C37D6FA291C0DA66&originRegion=us-east-1&originCreation=20220603182422",
      "date": "07-2012",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "1-PTSP",
          "name": "Pickup-and-delivery travelling salesman problem",
          "description": "set of customers such that each of the customers either supplies (pickup customers) or demands (delivery customers) a given amount of a single product, and by a vehicle, whose given capacity must not be exceeded, that starts at the depot and must visit each customer only once. The objective is to minimize the total length of the tour."
        }
      ],
      "tags": [
        {
          "name": "tsp",
          "additional_infos": "exactly the same tsp as in the paper First vs Best Improvement: an empirical study"
        },
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "same-heuristic",
          "additional_infos": {}
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_text": [1, 0]
          }
        },
        {
          "name": "NL"
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Note that each local search, and thus the VND, could use first improvement (a move made when an improvement in the neigh-borhood is found the first time) or best improvement strategy (a move to the best solution in the neighborhood). The latter is also known as steepest descent. For all variants of our VND that will be discussed below, we use the first improvement approach (for the discussion regarding differences between these two strategies in solving the travelling salesman problem by 2-opt, see Hansen and Mladenovic ́ (2006))."
        },
        {
          "content": "The solution space of 1-PDTSP consists of all possible tours starting from the depot. A tour will be represented as a permutation of the elements in {1, . . . , n}"
        },
        {
          "content": "We use a method from Zhao et al. (2009a) for generating the initial solution since [...] This constructive procedure starts by randomly choosing the first customer x2. The next customer xi+1 added to the current sub-tour T is chosen from a static data structure which includes cl = 20 closest customers from the last inserted customer xi. We consider only feasible sub-tours without violating the capacity constraints to deliver or to collect the demand with respect to the customer xi+1. Among these cl closest    customers, we search for the customers who can be feasibly added at the end of the tour T, those not yet been visited, and select the customer with the greatest demand."
        },
        {
          "content": "By the so called neighbor-list implementation of 2-opt (see, e.g., Hansen and Mladenovic ́ (2006)), we sort all customers in non-decreasing order of their distances in the preprocessing step, i.e."
        }
      ],
      "analysis": "The paper cite First vs Best improvement: an empirical study to justify the use of the first improvement variant for all of his heuristics instead of the best improvement. However, it does not seem to follow its conclusion: with an initialization greedy, following a constructive heuristic the first improvement is used"
    },
    {
      "name": "A hybrid heuristic approach for the multi-commodity pickup-and-delivery traveling salesman problem",
      "url": "https://reader.elsevier.com/reader/sd/pii/S0377221712000719?token=C0DF82AFB5CEDD405C7998A590B32BD7CB8564BD37D5EFF26616A7151239E01D1B010A5E5C3A6979C37D6FA291C0DA66&originRegion=us-east-1&originCreation=20220603182422",
      "date": "10-2015",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "m-PDTSP",
          "name": "Multi-Commodity Pickup-and-Delivery Traveling Salesman Problem",
          "description": "Each location (depot and customers) must be visited exactly once by the vehicle. The travel cost between each pair of locations is known, and not necessarily symmetric. Each customer requires some given quantities of different products and/or provides some given quantities of other different products. A unit of a product collected from a customer can be supplied to any customer that requires this product. It is assumed that the vehicle must start and finish the route at the depot. Another visit to the depot is not allowed. The aim of the m-PDTSP is to find a Hamiltonian route for the vehicle such that it picks up and delivers all the quantities of the different products satisfying the vehicle-capacity limitation and minimizing the total travel cost. Since each customer is visited once, each unit of a product loaded on the vehicle stays on the vehicle until it is delivered. "
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "same-heuristic",
          "additional_infos": {}
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VND"
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0, 1],
            "why": ""
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "As observed in Hansen and Mladenović (2006), one can analyze all solutions of a k-opt operator and select the best one, or quit the operator with the first solution that improves the initial tour. Based on preliminary experiments, we opted for the strategy that analyzes all solutions."
        },
        {
          "content": "The procedure is repeated starting from different vertices, and the 2-opt local search operator described in Section 3.2 is applied to the best solution if feasible"
        }
      ],
      "analysis": "Use directly the best over the first improvement heuristic to choose an improvement on a similar problem as the TSP"
    },
    {
      "name": "Integrating the Best 2-Opt Method to Enhance the Genetic Algorithm Execution Time in Solving the Traveler Salesman Problem",
      "type": "paper",
      "additionnal_infos": {
        "page": 196
      },
      "url": "https://link.springer.com/content/pdf/10.1007/978-3-642-30662-4.pdf",
      "date": "06-2012",
      "problem_tackled": [
        {
          "short_name": "tsp",
          "name": "Traveling Salesman Problem",
          "description": "Try to find the smallest tour that goes through each town"
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "tsp",
          "additional_infos": {}
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {}
        },
        {
          "name": "same-heuristic",
          "additional_infos": {}
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "genetic algorithm using 2-opt"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "To solve this problem, we study in this paper the impact of the integration of a new local optimization heuristic Best 2-opt with the genetic operators on the quality of solution and the runtime of the GA"
        },
        {
          "content": "we applied the Best 2-opt method to the bad tours chosen randomly from different instances of the STSP problem (berlin52, eil51, st70, eil76, pr76, kroA100), to follow how this method improves bad solutions at each iteration k. "
        },
        {
          "content": "algorithm2",
          "url": "imgs/BI2optGenetic.png",
          "type": "image"
        },
        {
          "content": "Several local search methods can be applied as improvements heuristic to optimize the solutions found by the genetic operators, such as simulated annealing and tabu search ... etc. In fact, 2-opt , 3-opt[7], and Lin-Kernighan[8] are well-known improvement heuristics for solving TSP problem"
        }
      ],
      "analysis": "The 2opt best improvement is used to improve the solution of a genetic algorithm. Even if the article does not refer to the property directly, it is used in practise to choose the best improvement instead of the first improvement. The FIvsBI paper is used as a reference for the 2 exchange crossover heuristic and base results for the Best Improvement strategy on TSPLIB"
    },
    {
      "name": "Efficient Implementation of Improvement Procedures for Vehicle Routing with Time-Dependent Travel Times",
      "url": "https://journals.sagepub.com/doi/pdf/10.3141/2089-09",
      "type": "paper",
      "date": "01-2018",
      "problem_tackled": [
        {
          "short_name": "TDTSP",
          "name": "Traveling Salesman Problem with Time-Dependent Travel Times",
          "description": "Traveling Salesman Problem with Time-Dependent Travel Times"
        },
        {
          "short_name": "TDVRP",
          "name": "Vehicle Routing Problem with Time-Dependent Travel Times",
          "description": "TDTSP extend the classical vehicle-routing problem (VRP) and traveling salesman problem (TSP) to account for urban congestion, where the travel time between two customer locations depends on the distance between the points and the time of day"
        }
      ],
      "tags": [
        {
          "name": "same-heuristic",
          "additional_infos": {}
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0, 1],
            "why": ""
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Both implementations have been tested in the literature and used in practical applications [for example, a recent study (11) reports that the first improvement is better and faster than the best improvement if the initial solution is chosen randomly, while the best improvement is slightly better if the initial solution is found by some construction TSP heuristics]. In this study, the first improvement rule is used to implement the methods."
        },
        {
          "content": "The numerical experiments were conducted on randomly generated problem instances with size n = 50, 100, 150, 200, and 300 for singletour experiments and n = 100, 200, 300, and 400 for multitour experiments. For each problem, n node positions (xi , yi) (i ∈ N) were generated on the basis of a uniform distribution from [0, 100]2. The optimal Euclidean TSP tour length over these n nodes was first estimated on the basis of the expression (14), where S is the area in which the n nodes were randomly generated (here S = 10,000)."
        }
      ],
      "analysis": "Directly choose the first improvement as random initial solution is used"
    },
    {
      "name": "Variable Neighborhood Descent",
      "url": "https://jesussanchezoro.github.io/publications/duarte2018a.pdf",
      "type": "survey",
      "date": "08-2018",
      "problem_tackled": [
        {
          "short_name": "tsp",
          "name": "Traveling Salesman Problem",
          "description": "Try to find the smallest tour that goes through each town"
        }
      ],
      "tags": [
        {
          "name": "tsp",
          "additional_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {}
        },
        {
          "name": "same-heuristic",
          "additional_infos": {}
        },
        {
          "name": "CL",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "In [17], an empirical study on traveling salesman problem was conducted in order to compare the first and the best improvement strategy within 2-opt neighborhood structure. It appeared that the quality of the final solution depends on the quality of the initial solution: (i) if random initial solution is chosen, the better and faster is the first improvement strategy; (ii) the opposite holds if the greedy solution is taken as initial one."
        }
      ],
      "analysis": "In this survey, the conclusion reported by the publication First vs Best Improvement is mentionned  as an observation made by the publication First vs Best Improvement: an empirical study. It is not used after that."
    },
    {
      "name": "Quantifying the exploration performed by metaheuristics",
      "url": "https://www.tandfonline.com/doi/full/10.1080/0952813X.2012.656327?scroll=top&needAccess=true",
      "type": "paper",
      "date": "12-2010",
      "problem_tackled": [
        {
          "short_name": "tsp",
          "name": "Traveling Salesman Problem",
          "description": "Try to find the smallest tour that goes through each town"
        }
      ],
      "tags": [
        {
          "name": "tsp",
          "additional_infos": {}
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {}
        },
        {
          "name": "same-heuristic",
          "additional_infos": {}
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "not-follow-FIvsBI",
          "additional_infos": {
            "relevant_texts": [1],
            "why": "local search is applied to all solutions generated at each iteration by MMAS and GA, respectively. Then we can consider that the input solution is already improved / not completely random"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "We implement two classical local search approaches for the TSP, namely 2-opt and 3-opt. They are based on the idea of λ-optimality (Lin 1965): a solution is λ-optimal if it is not possible to improve it by replacing any λ of its edges. As the name itself tells, in 2-opt λ = 2 and in 3-opt λ = 3."
        },
        {
          "content": "In the current implementation, local search is applied to all solutions generated at each iteration by MMAS and GA, respectively. The search is randomised: equal probability is associated to each feasible exchange. The number of possibilities tested is equal to the number of edges included in one solution (Dorigo and Stützle 2004). The first improvement pivoting rule is used (Hansen and Mladenović 2006). The search is fastened through the application of the do not look bits mechanism (Hoos and Stützle 2004)."
        }
      ],
      "analysis": "The paper cite First vs Best Improvement to support the choice of the first improvement strategy. However, they do not seem to fully follow the approach of the original paper. The initial solution provided to the algorithm is an already improved solution by ant colonies or genetic algorithm. The only ambiguity is that can we consider if these solutions are a bit improved or not in my opinion"
    },
    {
      "name": "Delayed improvement local search",
      "url": "https://link.springer.com/article/10.1007/s10732-021-09479-9",
      "type": "paper",
      "date": "06-2021",
      "problem_tackled": [
        {
          "short_name": "tsp",
          "name": "Traveling Salesman Problem",
          "description": "Try to find the smallest tour that goes through each town"
        },
        {
          "short_name": "max-cut",
          "name": "Max-cut",
          "description": "Try to find the largest cut of a graph: Each edge has a weight. Try to maximize the sum of edges cut"
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "same-heuristic",
          "additional_infos": {}
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithms": ["Delayed Improvement"]
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "NL",
          "additional_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "notUsedInPaper",
          "additional_infos": {
            "relevant_texts": [0],
            "why": "The paper cites First vs Best Improvement: an empirical study as a reference point. It proproses an alternative to first or best improvement. The property is not used"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Hansen and Mladenović (2006) analyzed and computationally compared these two strategies along with worst improvement (selection of the least improving neighbor) in the context of 2-opt for the TSP. They concluded that FILS is the best method when the search starts from a random initial solution, whereas BILS is better when the initial solution is constructed with a greedy heuristic."
        }
      ],
      "analysis": "Delayed Improvement local search use First vs Best Improvement: an empirical study as a reference point. It proproses an alternative to first or best improvement. The property is not used"
    },
    {
      "name": "Sequential variable neighborhood descent variants: an empirical study on the traveling salesman problem",
      "url": "https://onlinelibrary.wiley.com/doi/abs/10.1111/itor.12282",
      "type": "paper",
      "date": "04-2016",
      "problem_tackled": [
        {
          "short_name": "tsp",
          "name": "Traveling Salesman Problem",
          "description": "Try to find the smallest tour that goes through each town"
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "same-heuristic",
          "additional_infos": {}
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithms": ["Sequential Variable Neighborhood Descent"]
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "redoExp",
          "additional_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "sameRes",
          "additional_infos": {
            "relevant_texts": [3]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "As generalizing the results of any empirical study is a difficult task if possible at all, we can say that the similar behavior can be expected, but we cannot absolutely ensure that those properties hold for all other problems. For example, conclusions derived from the “first versus best improvement” empirical study (Hansen and Mladenović, 2006) are confirmed in solving more than dozen combinatorial optimization problems, but still, one cannot claim that properties of the first and the best improvement strategies within 2-opt local search in solving TSP will hold in solving any other problem by any other local search method."
        },
        {
          "content": "We explore the most commonly used TSP neighborhood structures, such as 2-opt and insertionneighborhoods."
        },
        {
          "content": "Move or not decision (i.e., if an improvement has been detected in some neighborhood, there areseveral options to continue the search after updating the incumbent solution): (i) Basic VND (B-VND)—return to the first neighborhood on the list"
        },
        {
          "content": "For B-VND, P-VND, and C-VND, the first improvement search strategy is a better option if aninitial solution is chosen at random. On the other hand, if an initial solution is constructed in agreedy manner, the best improvement search strategy turns out to be a better choice (comparethe averages for B-VND, P-VND, and C-VND over six possible orders). Note that a similar conclusion was drawn in (Hansen and Mladenovi ́c, 2006)"
        }
      ],
      "analysis": "The paper explore the configurations of sequential variable neighborhood searches: the initial solution used, the first or best improvement strategy and how to pass from one type of neighborhood to another. Their results highlight similar conclusions to the ones drawn in (Hansen and Mladenović, 2006). However prior to the study the paper highlight an interesting warning regarding the conclusion of (Hansen and Mladenović, 2006): ''one cannot claim that properties of the first and the best improvement strategies within 2-opt local search in solving TSP will hold in solving any other problem by any other local search method''."
    },
    {
      "name": "Sequential search and its application to vehicle-routing problems",
      "url": "https://www.sciencedirect.com/science/article/pii/S0305054805000766",
      "date": "08-2006",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "CVRP",
          "name": "Capacitated Vehicle Routing Problem",
          "description": "Try to find the shortest route that satisfies the capacity constraints to satisfy the demand of each customer"
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "same-heuristic",
          "additional_infos": {}
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "NL",
          "additional_infos": {}
        },
        {
          "name": "redoExp",
          "additional_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithms": ["Sequential Search"]
          }
        },
        {
          "name": "diffRes",
          "additional_infos": {
            "relevant_texts": [1]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": " Hansen and Mladenović [40] already made comparisons for the symmetric TSP and their findings were the following. Starting from a random solution, FI computes better results that BI. Conversely, starting local search from a given greedy or nearest-neighbor solution, BI is better and faster than FI on average."
        },
        {
          "content": "In 55% of the cases, BI was better than FI. On average, BI terminates in a local optimum 3.11% and FI 3.18% above the best known solution. This average improvement of BI over FI of 0.07% is small. Hence, the results of Hansen and Mladenović [40] of the STSP cannot be projected to the CVRP."
        },
        {
          "content": "The benchmark instances are generated by varying the number of customers, the customer distribution within the Euclidian plane, the demand distribution of customers, and the vehicle capacity. Altogether there are 600 instances grouped into 10 series of 60 instances each. Any series include instances of 15 different sizes, i.e., number  of customers, ranging from  to 2500. For each size there are four different demand distributions. Table 1 summarizes the series."
        }
      ],
      "analysis": "One section of this paper is dedicated to comparison between the First and Best Improvement strategy for the CVPR problem as a study case for the sequential search algorithm. The results show that the conclusion of the original paper do not hold for the CVPR problem. More precisely for initial random instances no significant difference is observed between the First and the Best Improvement strategy."
    },
    {
      "name": "In-depth analysis of granular local search for capacitated vehicle routing",
      "url": "https://logistik.bwl.uni-mainz.de/files/2020/04/dpo_2020_03.pdf",
      "date": "03-2020",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "CVRP",
          "name": "Capacitated Vehicle Routing Problem",
          "description": "Try to find the shortest route that satisfies the capacity constraints to satisfy the demand of each customer"
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {}
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VND with Granular search"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "redoExp",
          "additional_infos": {}
        },
        {
          "name": "sameRes",
          "additional_infos": {
            "relevant_texts": [4, 5, 6, 7, 8]
          }
        },
        {
          "name": "notSure",
          "additional_infos": {
            "what": [
              "first improvement gives better results than best improvement with greedy initialization: experiments more focused on time and best algorithm (see graphics)"
            ]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Hansen and Mladenovic´ (2006) examine and compare the performance of first and best improvement as pivoting rules for a 2-opt LS for the TSP. The authors find that for random starting solutions, best improvement provides worse results than first improvement. When using starting solutions constructed by a greedy or nearest neighbor heuristic, however, best improvement is better and faster on average. "
        },
        {
          "content": "The third possibility is the pruning of neighborhoods, i.e., to heuristically reduce the size of the neighborhoods. A very popular example is granular search"
        },
        {
          "content": "[Pivoting rules] first improvement (FI): Apply the first move that leads to a solution with better objective function value."
        },
        {
          "content": "[Pivoting rules] best improvement (BI): Apply the best move found"
        },
        {
          "content": "Interestingly, best improvement is not used in any of the non-dominated algorithmic variants. The superior behavior of first and sequential improvement over best improvement may be explained by the design of GLS: because the generator arc lists are sorted from most to least promising arc, we assume that a first improvement search returns moves that are often almost as good as the best moves but are found in much shorter time"
        },
        {
          "content": "The IFG set comprises a total of 600 instances, which are grouped into ten series that differ with regards to the coefficient of variation of the demand distribution. To keep the computational effort in a reasonable range, we restrict ourselves to the first 36 instances of series 1, which contain a central depot and between 250–1000 customers that are uniformly distributed in the plane. For each instance size, there are four different demand distributions, generated as follows: customer demands are randomly drawn from a uniform distribution over [10, 30], and the vehicle capacity is determined by multiplying the average demand by factors of λ = 25, 50, 75, and 100."
        },
        {
          "content": "The UPPPVS set comprises 100 instances that contain between 100 and 1000 customers. Customers are positioned either randomly, clustered, or random-clustered, and the depot is located either in the center, the bottom left corner, or at a random point"
        },
        {
          "content": " Each of these variants is run on each of the problem instances described in Section 4.1 starting from 5000 initial solutions that are generated as described in the following           section."
        },
        {
          "content": "We aim to generate a set of initial solutions that is as diverse as possible to cover a broad range of the search space. To this end, we use five randomized construction heuristics (nearest neighbor, nearest insertion, random insertion, accelerated best insertion, savings) and generate 1000 different and feasible initial solutions with each of them. Nearest neighbor is the only sequential approach, the remaining four are parallel. Details about the construction heuristics are provided in the following paragraphs"
        }
      ]
    },
    {
      "name": "Finding the Maximum Multi Improvement on neighborhood exploration",
      "url": "https://link.springer.com/article/10.1007/s11590-020-01556-5",
      "date": "02-2020",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "tsp",
          "name": "Traveling Salesman Problem",
          "description": "Try to find the smallest tour that goes through each town"
        },
        {
          "short_name": "MMIP",
          "name": "Maximum Multi Improvement Problem",
          "description": "'' finding a maximum set of independent moves from a given neighborhood structure''"
        }
      ],
      "tags": [
        {
          "name": "same-heuristic",
          "additional_infos": {}
        },
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "notSure",
          "additional_infos": {
            "what": [
              "what is the initial solution. Always said a feasible solution but not said if it is a random or greedy one. Only clue ''has a very homogeneous behavior, even with the MI search starting with random initial solution''"
            ]
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [1]
          }
        },
        {
          "name": "redoExp",
          "additional_infos": {}
        },
        {
          "name": "sameRes",
          "additional_infos": {
            "relevant_texts": [2]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "The MI can be seen as an alternative to known BI and FI with a heavier computational load, but seeking to achieve better quality solutions in fewer iterations"
        },
        {
          "content": "Nevertheless, each BI strategy tends to achieve a faster convergence (bigger improvements), but it is necessary to consider the cost to search all neighbors. This hunch was confronted in literature [8] when BI and FI were tested inside a descent local search, for two scenarios: (1) starting with a greedy initial solution, where BI (Steepest Descent Hill Climbing) has more successful; and (2) starting with a random solution, where FI iterated descent was victorious"
        },
        {
          "content": "table1MMI.png",
          "type": "image"
        }
      ],
      "analysis": "The paper reproduce the experiment by testing FI and BI for a feasible initial (suspected random) solution. The table 1 of the publication shows that in average for other instances of TSPLIB than First vs Best Improvement, the algorithm FI achieve smaller average final cost."
    },
    {
      "name": "A Survey on the Electric Vehicle Routing Problem: Variants and Solution Approaches",
      "url": "https://www.hindawi.com/journals/jat/2019/5075671/",
      "date": "05-2019",
      "type": "survey",
      "problem_tackled": [
        {
          "short_name": "E-VRP",
          "name": "Vehicle Routing Problem",
          "description": "''VRP is a generalization of the well-known traveling salesman problem (TSP), which aims to design one least-cost route to visit all the customers'' E-VRP is the variation with electrical vehicle additionnal constraints"
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "same-heuristic",
          "additional_infos": {}
        },
        {
          "name": "notUsedInPaper",
          "additional_infos": {
            "relevant_texts": [],
            "why": "survey"
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "The order of the operators affects both the solution quality and the execution time. Often, there is a question whether to make a first better or the best improvement move in the LS phase [152]."
        }
      ],
      "analysis": "this survey tackles the subject of vehicle routing problem generalized to electrical vehicles. It mentions the importance of the choice of the improvement. However, this element does not play an important role in the publication (not evocated after)"
    },
    {
      "name": "Variable neighbourhood search: methods and applications",
      "url": "https://link.springer.com/article/10.1007/s10479-009-0657-6",
      "date": "10-2009",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "none",
          "name": "none",
          "description": "this paper does not use / talk about a specific problem. it provides a general methodology"
        }
      ],
      "tags": [
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0],
            "why": "used to provide advices (subject of the paper)"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "NL",
          "additional_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "First vs. best improvement. Experimentally compare first and best improvement strategies within a local search. Previous experience suggest the following: if your initial solution is chosen at random, use the first improvement rule, but if some constructive heuristic is used, use the best improvement rule"
        }
      ]
    },
    {
      "name": "A Clustering Search Metaheuristic for the Bi-objective Flexible Job Shop Scheduling Problem",
      "url": "https://ieeexplore.ieee.org/abstract/document/8786265",
      "type": "paper",
      "date": "10-2018",
      "problem_tackled": [
        {
          "short_name": "FJSP",
          "name": "Flexible Job Shop Scheduling Problem",
          "description": "''The scheduling of activities in an industry consists of determining the sequence of tasks (jobs) in each machine in order to optimize some objective. In this category of problems we have a set of tasks, each one formed by a sequence of operations, and each operation is performed by a single specific machine. For a job to be processed, it must move through all machines in the pre-determined sequence. The purpose of this problem, called Job Shop Scheduling (JSP), comes down to designate the order of the operations for each job in the previously defined machines to optimize some criterion. Considering the limitation of the JSP that each operation is processed by a specific machine, Brucker and Schlie [3] proposed the Flexible Job Shop Scheduling (FJSP). In this perspective, it is possible that some jobs can be processed by alternative machines, that is, the same job may have variations in the sequencing of their production [4].''"
        }
      ],
      "tags": [
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "Flexible Job Shop Problem"
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "Clustering Search (CS) metaheuristic"
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0, 1]
          }
        },
        {
          "name": "CL"
        }
      ],
      "extracted_informations": [
        {
          "content": "Soon after the CS identifies the promising areas, a local search (LS) is carried out, in order to refine the solution. This LS helps in quickly conversion to a local optimum. As LS was implemented an algorithm based on the best improvement method [34]. The pseudocode of the LS is presented in the Algorithm 2. The LS is divided into two stages"
        },
        {
          "content": "As a solution-generating metaheuristic for CS, we used Simulated Annealing (SA) [30]. The SA is based on an analogy with thermodynamic to optimize solutions to combinatorial optimization problems.SA performs perturbations in the current solution in an iterative way, seeking better neighbor solutions. An important feature of SA is the fact that it allows worse solutions as a form of diversification of the search. In doing this, SA tends to escape from local optimum, seeking a global optimum in later iterations"
        }
      ],
      "analysis": "This paper use directly the conclusion of First vs Best Improvement to justify the choice of a best improvement strategy over a first improvement one for the flexible job shop problem"
    },
    {
      "name": "A local search heuristic for the (r|p)-centroid problem in the plane",
      "url": "https://www.sciencedirect.com/science/article/pii/S0305054813001317",
      "date": "12-2004",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "(r|p)-centroid problem",
          "name": "(r|p)-centroid problem",
          "description": "two players, called a leader and a follower, open facilities to service clients. Clients are identified with their location on the Euclidean plane. Facilities can be opened anywhere in the plane. At first, the leader opens p facilities. Later on, the follower opens r facilities. Each client patronizes the closest facility. Each player maximizes own market share. The goal is to find p facilities for the leader to maximize his market share"
        }
      ],
      "tags": [
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "(r|p)-centroid problem"
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS with swap neighboorhood"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "notSure",
          "additional_infos": {
            "what": [
              "can we consider the intermediate solutions of a vns after shaking an improved or a random one even with the shaking specified"
            ]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "We investigate these subneighborhoods sequentially and apply the first improvement rule [17] for the local search at the Step 2(b) of the method"
        },
        {
          "content": "Instead of the search through all neighboring solutions we use a randomized neighborhood which contains each solution from the (k,l)-Swap neighborhood with a given probability."
        },
        {
          "content": "(r,p)centroid",
          "type": "image"
        }
      ],
      "analysis": "This paper uses directly First vs Best Improvement to use the frist improvement strategy in a VNS algorithm after the shaking operation."
    },
    {
      "name": "A nonlinear multidimensional knapsack problem in the optimal design of mixture experiments",
      "url": "https://www.sciencedirect.com/science/article/pii/S0377221719306733",
      "type": "paper",
      "date": "02-2020",
      "problem_tackled": [
        {
          "short_name": "nonlinear multidimensional knapsack (sac à dos) problem",
          "name": "nonlinear multidimensional knapsack problem - mixture experiment",
          "description": "A mixture experiment is an experiment in which the experimental factors are ingredients of a mixture, and the response depends only on the relative proportions of the ingredients. The levels of the experimental factors therefore all lie between zero and one, and the sum of the levels of all experimental factors is one for every test or run of the experiment."
        }
      ],
      "tags": [
        {
          "name": "useDirect-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "nonlinear multidimensional knapsack problem"
          }
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "CL",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "By using a first-improvement algorithm, we follow the recommendation by Hansen and Mladenović (2006), who state that a first-improvement algorithm is better and faster than a best-improvement algorithm when the initial solution is chosen at random."
        },
        {
          "content": "We then evaluate the effectiveness of our VNS algorithm by comparing it to an exact approach"
        },
        {
          "content": "Our algorithm starts by generating an initial design. This is done by randomly selecting points from the candidate set  until at least one of the ingredient availabilities is exceeded. The final feasible design produced by this procedure is the starting design for the VNS procedure. The construction of the initial design is described in Algorithm 1, where  represents the starting design."
        },
        {
          "content": "As soon as such an improved design has been found, the neighborhood N0 of that newly found design is constructed and explored to attempt to find an even better design in terms of the D- or I-optimality criterion. At some point in time, this procedure will result in a design for which the neighborhood N0 does not contain any better alternative. That design then is a local optimum with respect to neighborhood N0. It might, however, not be a locally optimal design with respect to neighborhood N1. Therefore, the next step is to explore the neighborhood N1 of that design until a better one is found. As soon as a better design has been obtained from N1, the algorithm switches back to the smallest neighborhood N0 and attempts to find a better design in that neighborhood. If no better design can be found in neighborhood N1, then the algorithm switches to neighborhood N2"
        },
        {
          "content": "prcentroid_algo.png",
          "type": "image"
        }
      ],
      "analysis": "This paper uses the conclusion of First vs Best improvement: an empirical study to choose the first improvement over the best in their VNS algorithm. This algorithm will start with a random solution and will choose a neighbour by sequentially exploring multiple neighbourhood following the first improvement strategy. As no shaking is involved it seems reasonable to consider that each first improvement strategy starts with a random solution"
    },
    {
      "url": "https://www.sciencedirect.com/science/article/pii/S0950705120302707",
      "name": "A parallel variable neighborhood search algorithm with quadratic programming for cardinality constrained portfolio optimization",
      "date": "06-2020",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "CCPO",
          "name": "cardinality constrained portfolio optimization",
          "description": "One of the key issues in investment is to make a higher profit at a reasonable level of risk. In this context, one of the most common strategies is the “portfolio selection” defined as the compiling of the best asset allocation among various alternatives by considering the tradeoff between two conflicting objectives; return maximization and risk minimization. The main idea behind the portfolio selection strategy is to spread the capital among multiple securities efficiently rather than investing in a single security."
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "cardinality constrained portfolio optimization"
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS + quadratic programming"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "In the local search step of the proposed solution approach, the best improvement strategy allowing the algorithm to run until all possible movements are done is applied. Although it is known that the best improvement is much more time consuming compared to the first improvement strategy, it is reported that better sometimes faster results are obtained with the best improvement when a good initial solution generated by a constructive heuristic or an initial solution construction strategy rather than the random initial solution [70]."
        },
        {
          "content": "Therefore, in this study, rather than starting with a random initial solution, the method proposed by Cura [32] has been adapted to both construct an initial solution and to construct the search pool to be used in the asset selection stage of the proposed solution approach."
        }
      ],
      "analysis": "This paper directly uses the First vs Best Improvement: an empirical study advice and choose to use the best improvement with a modified VNS algorithm starting with an improved initial solution"
    },
    {
      "name": "A simple and effective evolutionary algorithm for the capacitated location–routing problem",
      "url": "https://www.sciencedirect.com/science/article/pii/S0305054816000083",
      "date": "06-2016",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "CLRP",
          "name": "Capacitated Location–Routing Problem",
          "description": "The CLRP can be defined on a complete and undirected graph  with a vertex set  and an edge set .  consists of a subset  of  potential depots and a subset  of  clients. Each client  has a non-negative demand , to be satisfied only once, and is to be assigned to a single depot  with capacity . The shipment of clients’ demand from the assigned depot is carried out by an unlimited fleet of homogeneous vehicles with capacity ; each vehicle returning to the departure depot at the end of the route. The total demand of the clients assigned to each depot must not exceed its capacity and the total demand satisfied by any vehicle must not exceed . The following non-negative costs are incurred: fixed cost  when depot  has clients assigned and must be opened; fixed cost  for each vehicle used; and traveling cost  each time edge  is in a vehicle route. The goal is to determine the set of depots to open and the tracing of the routes in order to minimize total costs"
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": [0]
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "Genetic algorithm with sometimes first improvement"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "All the methods in  implement the first found improvement rather than the best and stop when no additional improvement is detected – for some of these procedures this has been empirically found to be better [13]."
        },
        {
          "content": "GA_CLRP.jpg"
        },
        {
          "content": "The proposed algorithm starts out by creating an initial population  made of feasible random chromosomes: . Afterwards, a main loop is performed, stopping when a maximum number  of iterations without improving the best solution is reached."
        }
      ],
      "analysis": "In this paper the first improvement is chosen over the best based only on the Hansen publication. It is used inside a genetic algorithm as a mutator operator. The global algorithm starts with a random solution"
    },
    {
      "url": "https://www.sciencedirect.com/science/article/pii/S0305054816300429",
      "name": "A VNS approach to multi-location inventory redistribution with vehicle routing",
      "type": "paper",
      "date": "02-2017",
      "problem_tackled": [
        {
          "short_name": "multi-location inventory redistribution with vehicle routing",
          "name": "multi-location inventory redistribution with vehicle routing",
          "description": "two-echelon inventory problem with uncertain demand, where perishable products are distributed from a central warehouse to retail stores"
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "multi-location inventory redistribution with vehicle routing"
          }
        },
        {
          "name": "same-heuristic",
          "additional_infos": {
            "relevant_texts": [5]
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Intra-route Swap exchanges the positions between two retail stores on the tour. This is done for all pairs of retail stores on the route. Furthermore, within the Intra-route Relocate operator, one store is removed from the tour and reinserted at another position. Within every local search operator, we look for the best neighbor solution (see [18])."
        },
        {
          "content": "For solving the underlying routing problem, we chose VNS. The basic idea of VNS is the interchanging of two phases: during the Local Search phase, the local optimum is obtained, whereas the solution is perturbed during the Shaking phase. We adapt this method to suit our problem and propose Algorithm 1."
        },
        {
          "content": "In the Shaking phase, we perturb the solution by using one of the following operators: Inter-route Two-opt, Inter-route Swap or Inter-route Relocate. The selection of the operator is done randomly and operators are performed only between two routes. The Inter-route Two-opt operator deletes one edge from both routes and reconnects the routes so that the direction is preserved (also known as ⁎operator). The idea of Inter-route Two-opt is depicted in Fig. 4. The procedure is repeated until we reach the hth neighborhood; no edge can be addressed more than once during the same iteration."
        },
        {
          "content": "Therefore, we let the number of vehicles vary during the optimization process. As for the initial number of vehicles, r, we assume that all retail stores should be visited more or less close to the middle of the working day (operation time window). "
        },
        {
          "content": "After obtaining the initial number of routes, r, we also select r seed customers, being the retail stores located furthest away from the depot, and assign them to the routes. Additional locations are selected by applying the Regret Insertion operator. The benefit of the Regret heuristic on vehicle routing problems has been outlined by Trick [40] and recently by Pisinger and Ropke [33"
        },
        {
          "content": "In the Local Search phase, we randomly select one of the operators: Intra-route Two-Opt, Intra-route Swap or Intra-route Relocate"
        },
        {
          "content": "algorithm1"
        }
      ],
      "analysis": "This paper chooses the best improvement refering to the First vs Best improvement: an empirical study paper. It uses a VNS algorithm where one of the possible local search step is using two opt neighbourhood with best improvement. The initial solution of the full algorithm is created by choosing a portion of the customers but then follows a regret insertion operator (so a greedy) heuristic to add more of them"
    },
    {
      "name": "Bi-local search based variable neighborhood search for job-shop scheduling problem with transport constraints",
      "url": "https://link.springer.com/10.1007/s11590-020-01674-0",
      "type": "paper",
      "date": "11-2020",
      "problem_tackled": [
        {
          "short_name": "JS",
          "name": "job-shop scheduling problem with transport constraints",
          "description": "a job-shop scheduling problem in vehicle based manufacturing facility that is mainly related to job assignment to resources"
        }
      ],
      "tags": [
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "CL"
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "job-shop scheduling problem with transport constraints"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Note that since the initial solution is chosen at random, we are using the first improvement technique for both local searches as recommended in [40]."
        },
        {
          "content": "To solve this problem, we use the Variable neighborhood Search (VNS) metaheuristic to rearrange different task scheduling (i.e. transport and processing tasks). This metaheuristic incorporates asynchronous local search routines that operate together to find the better resources task allocation while keeping the makespan minimized."
        },
        {
          "content": "we use for our metaheuristic input a randomly generated strings for both JSP and transport schedules (it has been highlighted in the previous section that the used schedule representation generates always feasible solutions)"
        }
      ],
      "analysis": "In this publication, a vns type of algorithm is used to tackle a variant of the job shop problem. As stated in the paper ''This metaheuristic incorporates asynchronous local search routines that operate together to find the better resources task allocation while keeping the makespan minimized''. The initial solution is random and so the article use the first improvement strategy basing it only on the First vs Best Improvement article."
    },
    {
      "url": "https://www.sciencedirect.com/science/article/pii/S1568494616306597",
      "name": "Improving the performance of embedded systems with variable neighborhood search",
      "date": "04-2017",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "DMAP",
          "name": "Dynamic Memory Allocation Problem",
          "description": "Problem of how to allocate dynamically memory on embedded systems to improve the performance of a device and so reduce its energy consumption"
        }
      ],
      "tags": [
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [1]
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "Dynamic Memory Allocation Problem"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "In [14], an empirical study on traveling salesman problem was conducted to compare the first and the best improvement strategy within 2-opt neighborhood structure. It appeared that the quality of the final solution depends on the quality of the initial solution: (i) if random initial solution is chosen, the better and faster is the first improvement strategy; (ii) the opposite holds if the greedy solution is taken as initial one."
        },
        {
          "content": "According to previous results in the related literature and considering the nature of the DMAP, we propose an algorithm that systematically explores the local neighborhood of the incumbent solution by following the best improving strategy."
        },
        {
          "content": "More precisely, we propose a semi-greedy constructive algorithm, a randomized shake procedure, and a local search method. We additionally propose a parallel implementation of a VNS based on the Replicated-Shaking methodology."
        },
        {
          "content": "We propose a semi-greedy procedure, called CBI (Constructive Based on Instructions), to construct solutions"
        },
        {
          "content": "Given a solution S, the proposed move operator basically removes a data structure from its current memory bank randomly selected (including the external memory) and includes it in a different memory bank (or the external memory) producing a new solution S′"
        },
        {
          "content": "In general, iterations performed in the first improvement strategy are more efficient than those in the best improvement one, since the former only evaluates part of the neighborhood, while the latter explores it completely. On the other hand, the improvement obtained in the first improvement strategy is typically smaller than the one achieved by the best improvement strategy, requiring in general more iterations to obtain the local optimum. Additionally, the best improvement strategy is usually more adequate to perform efficient catching and updating mechanisms, which allows the search to efficiently explores the neighborhood (see [16] for further details)."
        },
        {
          "content": "algorithm1_BVNS.png",
          "type": "image"
        }
      ],
      "analysis": "This paper use the First vs Best Improvement: an empirical study publication to justify in part the choice of the best improvement strategy in a VNS algorithm."
    },
    {
      "url": "https://link.springer.com/content/pdf/10.1007/978-3-642-01020-0.pdf",
      "name": "Multiobjective Decomposition of Positive Integer Matrix: Application to Radiotherapy",
      "date": "04-2009",
      "type": "paper",
      "problem": [
        {
          "short_name": "Decomposition of Positive Integer Matrix",
          "name": "Decomposition of Positive Integer Matrix",
          "description": "decompose a positive integer matrix into a linear combination of binary matrices that respect the consecutive ones property. The positive integer matrix corresponds to fields giving the different radiation beams that a linear accelerator has to send throughout the body of a patient. Due to the inhomogeneous dose levels, leaves from a multi-leaf collimator are used between the accelerator and the body of the patient to block the radiations. The leaves positions can be represented by segments, that are binary matrices with the consecutive ones property"
        },
        {
          "short_name": "tsp",
          "name": "Traveling Salesman Problem",
          "description": "Try to find the smallest tour that goes through each town"
        }
      ],
      "tags": [
        {
          "name": "same-heuristic",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "near-tsp",
          "additional_infos": {
            "relevant_texts": [1]
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "Pareto Local Search"
          }
        },
        {
          "name": "not-follow-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0, 3, 4]
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "notSure",
          "additional_infos": {
            "what": ["version CL of algorithm"]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Once a decomposition is obtained, we optimize the SUvar objective by using a simple and fast TSP heuristic: the first improvement local search based on the 2-edges exchange moves [9]"
        },
        {
          "content": "Once the segments are fixed, the minimization of the overall leaf travel time is equivalent to a search for a Hamiltonian path of minimal weight on the complete graph which has the segments as vertices and the weight function μ on the edges. The weight function μ has the property to be a metric [11]. This problem can be transformed to a TSP problem (Hamiltonian cycle of minimal weight) by adding a dummy vertex which has a distance of zero to all other vertices. However, with this transformation, the triangular inequality in Euclidean space no longer holds which makes the TSP problem a little bit harder to solve"
        },
        {
          "content": "The Pareto local search (PLS) method [1,12] is one of the simplest method for multiobjective optimization. This method is a purely local search algorithm, generalization in the multiobjective case of a basic metaheuristic: the hill-climbing method. "
        },
        {
          "content": "Two initial solutions of good quality are generated and added to the initial population. The first solution is a good approximation of lexmin(DT,DC,SUvar) and the second one isagood approximation of lexmin(DT,SUvar ,DC)."
        },
        {
          "content": "section 3.2 list"
        }
      ],
      "analysis": "In this paper a problem of decomposition of positive matrix integers is reformulate as a TSP and processed with a Pareto Local search algorithm. The paper refers to the paper First vs Best Improvement: an empirical study to prefer a first improvement algorithm. However, the algorithm is initially provided with improved solutions. This paper does not seem to follow the recommandation of the original paper."
    },
    {
      "url": "https://www.sciencedirect.com/science/article/pii/S0020025517307934",
      "name": "Less is more: basic variable neighborhood search heuristic for balanced minimum sum-of-squares clustering",
      "date": "11-2017",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "BMSSC",
          "name": "Balanced Minimum Sum-of-Squares Clustering",
          "description": "finding homogeneous and well-separated subsets, called clusters, from a set of given data points. [...] Particularly in balanced clustering, these constraints impose that the entities be equally spread among the different clusters"
        }
      ],
      "tags": [
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "BMSSC"
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "notSure",
          "additional_infos": {
            "what": [
              "can the input of first improvement always considered random: take as input a random neighbour of an improved solution of the VNS"
            ]
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "The random neighbors x′ from the current solution x are selected in our VNS from nested swap neighborhoods . Thus, if  then x′ is selected from the neighborhood composed by all solutions yielded from two random swaps in x. Likewise, if  then x′ is obtained from three random swaps in x, and so on. Our local descent method consists of evaluating from a given solution all the neighbors obtained by exchanging a pair of points between two clusters, then moving the search to the first improving neighbor found. This constrasts with typical gradient descent methods that choose the steepest descent direction for further search. In [19], the authors demonstrate via extensive computational experiments that the first improving direction should be preferred if the initial solution for the search is chosen at random."
        }
      ],
      "analysis": "In this paper the first improvement is used in the improvement phase of a VNS algorithm, after a shaking phase. To justify the usage, the paper consider that the input of this improvement phase is always random and then use the First vs Best Improvement: an empirical study paper to justify the usage of first improvement algorithm. However, is it still possible to consider that the input of the improvement algorithm is still random even in the later steps of the algorithm?"
    },
    {
      "url": "https://link.springer.com/article/10.1007/s11590-013-0610-0",
      "name": "Memetic self-adaptive evolution strategies applied to the maximum diversity problem",
      "date": "02-2013",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "MDP",
          "name": "maximum diversity problem",
          "description": "The maximum diversity problem (MDP) consists in finding a subset of elements that have maximum diversity according to a function that defines the diversity between any two elements in a set. An example of this problem might be to find a subset of students in a classroom that have maximum diversity among themselves. The diversity between any two students might be stored in a matrix and defined according to parameters such as gender, age, grades and nationality"
        }
      ],
      "tags": [
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "Memetic self-adaptive evolution strategy (MSES)"
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0, 1]
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "relevant_texts": "memetic self-adaptive evolution strategy (MSES)"
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "MDP"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "The initial μ parent individuals are generated in line 3 as uniformly distributed random solutions. Each individual represents a solution to the problem as a vector of n elements xi where ∑ni=1xi=m, as in Eq. 1. All initial individuals already undergo a weak local search in line 4. Given that we can get to a neighbor of a solution by exchanging one element from M to N∖M, the weak local search is a first-improvement local search [10] that tests all neighbors in random order and moves to any neighbor that improves the current solution until no neighbor is able to improve the current solution."
        },
        {
          "content": "If the best solution known has been improved by the end of the iteration, the new current solution undergoes the weak local search with a best-improvement approach instead of the ordinary first-improvement algorithm."
        },
        {
          "content": "We propose a memetic self-adaptive evolution strategy (MSES) presented in Fig. 1 that includes local searches [15, 20], self-adaptation of the σi mutation parameter [4, 6, 15] and a low probability crossover operator."
        }
      ]
    },
    {
      "name": "Review of Basic Local Searches for Solving the Minimum Sum-of-Squares Clustering Problem",
      "url": "https://link.springer.com/chapter/10.1007/978-3-319-99142-9_13",
      "type": "paper",
      "date": "01-2018",
      "problem_tackled": [
        {
          "short_name": "MSSC",
          "name": "Minimum Sum-of-Squares Clustering",
          "description": "Knowing points and the number of groups required, build the most compact groups of points possible"
        }
      ],
      "tags": [
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "MSSC"
          }
        },
        {
          "name": "CL"
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "HMeans",
            "why": "although similar in ideas, different in applications (work on points/clusters vs edges)"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "In a study by [16], the first improvement for the H-means algorithm shows better behavior when the initial solution is of poor quality. The best improvement approach is preferred when the initial solution is of higher quality. For this reason, the option of best improvement was chosen here"
        }
      ],
      "analysis": "In this paper a survey of multiple methods to solve the MSSC problem are tackled. The paper choose to use a similar heuristic as 2-opt of the paper First vs Best Improvement: an empirical study. It chooses the best improvement as the initial construction is constructed via a constructive algorithm (Ward's method)"
    },
    {
      "name": "On the three-objective static unconstrained leaf sequencing in IMRT",
      "url": "https://link.springer.com/article/10.1007/s11517-020-02210-z",
      "type": "paper",
      "date": "07-2020",
      "problem_tackled": [
        {
          "short_name": "three-objective static unconstrained leaf sequencing",
          "name": "three-objective static unconstrained leaf sequencing ",
          "description": "This study addresses the third one, also called the leaf sequencing problem, which arises for each chosen irradiation angle, given the optimized fluence map. It consists in defining a sequence of configurations of a device (called multileaf collimator) that correctly delivers radiation to the patient. A usual model for this problem is the decomposition of a matrix into a weighted sum of (0,1)-matrices, called segments, in which the ones in each row appear consecutively. Each (0,1)-matrix corresponds to a configuration of the device. The realization problem has three objectives. The first one is to minimize the sum of weights assigned to the (0,1)-matrices. The second is to minimize the number of segments. Finally, the third one is to find the best order to apply those configurations"
        }
      ],
      "tags": [
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "three-objective static unconstrained leaf sequencing"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "not-follow-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0, 1],
            "why": "Use initialization improved but algorithm first improvement"
          }
        },
        {
          "name": "notUsedInPaper",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "After generating a neighbor solution, the L&T performs the first improvement two-edge exchange local search, proposed by [5] and implemented as described in [15], to find a better path for the third objective."
        },
        {
          "content": "The initial set contains two solutions generated by Engel’s algorithm. Those solutions differ in the method to select essential intervals: Kalinowski’s method or the Last rule. The method to generate the first solution is Kalinowski’s heuristics (presented in expression (17)). This method benefits the minimization of the second objective, NS. After generating the Kalinowski solution, the third objective is minimized by the Lin and Kernighan heuristic (LKH) [20]"
        }
      ],
      "analysis": "This paper is not relevant for the bibliography: it does not use the paper property, mention it or follow it implicitely or explicitely. FIvsBI is used as a reference as a implementation reference"
    },
    {
      "name": "Scheduling elective surgery patients considering time-dependent health urgency: Modeling and solution approaches",
      "url": "https://www.sciencedirect.com/science/article/pii/S0305048317302888",
      "date": "07-2019",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "surgery scheduling",
          "name": "surgery scheduling",
          "description": "assignment of surgeries considering the worst patient health condition among all patients waiting for surgeries and total overtime that exceeds the available time durations allotted for surgeries"
        }
      ],
      "tags": [
        {
          "name": "notUsedInPaper",
          "additional_infos": {
            "relevant_texts": [0, 2]
          }
        },
        {
          "name": "dontUse",
          "additional_infos": {}
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "surgery scheduling"
          }
        },
        {
          "name": "not-follow-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0, 1, 2],
            "why": "initial solution output from an algorithm but use first improvement"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "This paper does not illustrate a steepest ascent local search (also called a best improvement local search) which is an alternate strategy for exploring neighbor solutions [67]."
        },
        {
          "content": "A fastest ascent local search (FALS) and a tabu search (TS) are developed in this section considering the trade-off between the efficiency of computational time and the effectiveness of solutions. Sections 5.1–5.3 illustrate key structural elements used in both the FALS and TS"
        },
        {
          "content": "The heuristics use the optimal solution of the expected value model (EVM) for their initial solutions. The EVM is obtained by replacing random parameters Y, Ol, and Sj with deterministic parameters y, ol, and  respectively in the stochastic MIP"
        }
      ],
      "analysis": "This paper does not use or follow the property of the original publication. FIvsBI is just used as a reference as an alternative strategy"
    },
    {
      "name": "The uncapacitated r-allocation p-hub center problem",
      "url": "https://onlinelibrary.wiley.com/doi/abs/10.1111/itor.12801",
      "date": "04-2020",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "UrApHCP",
          "name": "The uncapacitated r-allocation p-hub center problem",
          "description": "''generalization of both single and multiple allocation variants of thep-hub center problem'' ''Hubs may be considered as special nodes in a network that serve as consolidation, switching, andsorting centers. Instead of serving each user from its assigned facility with a direct link, hub networksroute traffic flow via established hubs. It is usually assumed that there is a direct link between everyhub pair, while direct transportation from an origin to a destination node is not allowed''"
        }
      ],
      "tags": [
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS variations"
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "uncapacitated r-allocation p-hub center problem"
          }
        },
        {
          "name": "dontUse",
          "additional_infos": {}
        },
        {
          "name": "notUsedInPaper",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "As is  well  known,  it  can  be  more  beneficial  to  reduce  the  CPU  time  for  intensification  in  order  toincrease the time for diversification (see, e.g., Hansen and Mladenovi ́c, 2006). Hence, it appearsthat  inGVNS_Seqthere  is  a  better  balance  between  the  intensification  and  the  diversificationphases"
        },
        {
          "content": "we present a greedy heuristic for generating an initial solution. First, the heuristic chooses p hubs in a greedy manner, and greedily assigns nodes to these chosen hubs. [...]"
        }
      ],
      "analysis": "This paper does not use the conclusion of the paper to reach a better final cost. It uses it properties regarding computing time of the original paper"
    },
    {
      "name": "Two-machine flow shop with synchronized periodic maintenance",
      "url": "https://www.rairo-ro.org/10.1051/ro/2018062",
      "date": "02-2019",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "Two-machine flow shop with synchronized periodic maintenance",
          "name": "Two-machine flow shop with synchronized periodic maintenance",
          "description": "''flow shop scheduling problem, often we assume that the machines are always available and ready to execute the job at anytime'' ''In this case, the more appropriate strategy is a periodic and synchronized maintenance''"
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "Two-machine flow shop with synchronized periodic maintenance"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "In the literature, the difference between best and the first improvement local search [20] is the way of selecting the next neighbors. In the first one, the entire neighborhood of the current solution is explored and the best solution found so far is returned, whereas in first improvement, the first best neighbor is selected. In our VNS, we choose the best improvement local search for each neighborhood structure. The local search LS(Nk) (Algorithm 2) starts with an initial permutation and tries to repeatedly improve it by moving to a better neighbor considering the current neighborhood structure Nk."
        },
        {
          "content": "The contributions of this paper are two-fold: (i) a new mixed integer programming (MIP) formulation based on assignment variables is proposed with a lower bound on the optimal value; (ii) a variable neighborhood search metaheuristic is developed to generate a strong upper bound."
        },
        {
          "content": "We used a greedy procedure to construct the initial solution using a priority list of jobs obtained by applying different sorting rules on the first machine (line 1 of Algorithm 1)"
        }
      ],
      "analysis": "In this paper a VNS algorithm is designed to find a better solution for a two machine flow shop problem with synchronization of the maintainance. As the VNS algorithm starts from a already improved solution, the paper reference First vs Best Improvement: an empirical study to justify the usage of the best improvement strategy"
    },
    {
      "name": "Location-routing problems of semi-obnoxious facilities: Approaches and decision support",
      "url": "https://www.proquest.com/docview/1894070937/abstract/B6F7854D36CA42E6PQ/1",
      "date": "2011",
      "problem_tackled": [
        {
          "short_name": "",
          "name": "",
          "description": ""
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "same-heuristic",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "not-follow-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0, 1],
            "why": "use first improvement with an algorithm that takes the result of a previously modified solution (cf diagram). Can we say that the solution is still random -> not sure"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "Location-routing problems of semi-obnoxious facilities"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "This 2-opt procedure implements the first found improvement rather than the best (empirically found to be better by Hansen and Mladenović, 2006)"
        },
        {
          "content": "generalDiagramThesisLocationRouting.png",
          "type": "image"
        }
      ],
      "analysis": "This paper use the original paper to justify the usage of first improvement as it is ''found to be better''. However, the general diagram of this paper shows that the improvement algorithm get as input an already processed solution. It is discutable that the initial solution is random"
    },
    {
      "name": "Variable Neighborhood Search Methods for the Dispersion Graph Problems, With Application to Franchise Location Problems",
      "url": "http://biblos.hec.ca/biblio/theses/2013NO10.PDF",
      "type": "thesis",
      "data": "2013",
      "problem_tackled": [
        {
          "short_name": "MaxMinSum problem",
          "name": "MaxMinSum problem",
          "description": "''takes the sum of the distances from each facility to all its neighbors and maximizes the smallest sum of the distances'' '' given a set of n vertices we intend to select a subset of size p in a way that some function among the selected vertices is maximized''"
        }
      ],
      "tags": [
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "MaxMinSum problem"
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "notUsedInPaper",
          "additional_infos": {}
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "redoExp",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "sameRes",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "notSure",
          "additional_infos": {
            "what": ["the property is verified everywhere"],
            "why": "what is the initialization used in table1.I? Not clear"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "It is clearly observed that the current iteration strategy and first contribution local search (FC-FirstI) leads to the lowest average deviation over all the datasets and settings followed by the (FB-FirstI). This shows the superior performance of the first improvement strategy which has already been observed in the literature [11, 44]."
        },
        {
          "content": "table1II.png"
        }
      ],
      "analysis": "This thesis tests the two strategies for the MinMaxSum problem in a VNS framework. Multiple types of shaking, improvement strategies. With its results it shows that similar are observed than the First vs Best Improvement: an empirical study paper. However (at this moment) the initialization strategy used in this table is still not clear for the comparison of the two improvement strategies"
    },
    {
      "name": "Bi-level multi-objective fuzzy design optimization of energy supply systems aided by problem-specific heuristics",
      "url": "https://www.sciencedirect.com/science/article/pii/S0360544217310319",
      "type": "paper",
      "date": "10-2017",
      "problem_tackled": [
        {
          "short_name": "energy systems design optimization",
          "name": "energy systems design optimization",
          "description": "''Multi-objective design and operation optimization of energy supply systems with respect to costs, energy efficiency and environmental indicators''"
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "Scatter search"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "energy systems design optimization"
          }
        },
        {
          "name": "redoExp",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "sameRes",
          "additional_infos": {
            "relevant_texts": [0]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Intuitively, the best-improvement local search might seem superior, but Hansen and Mladenović [84] have shown that this is not always the case. In this study, it was significantly slower, giving almost always the same final results as the first-improvement local search. PSH local search rules suggested for this approach are basically the moves in two or more directions at the same time. Since there are too many possibilities for such moves, heuristics is applied to choose the promising ones. Here, the heuristics heavily depends on comparing the values of different objectives for an observed solution. The objectives have different units and orders of magnitude. As already mentioned, the fuzzy approach is appropriately chosen for such situation."
        }
      ],
      "analysis": "This paper use an improvement based algorithm to improve a solution as a step of a more global algorithm. It is stated that the two strategies have been tested and that best improvement gave ''almost the same final result'' as a first improvement strategy"
    },
    {
      "name": "Less is more: Basic variable neighborhood search for minimum differential dispersion problem",
      "url": "https://www.sciencedirect.com/science/article/pii/S0020025515005526",
      "date": "01-2016",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "Min-Diff DP",
          "name": "Minimum differential dispersion problem",
          "description": "''The dispersion, or diversity problems (DP) consist of finding a subset S ⊂ N, where a set N of n elements and distances between pairs of elements are given, such that the objective function based on the distances between elements in S is maximized or minimized.'' "
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [2]
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "Min-Diff DP"
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "redoExp",
          "additional_infos": {}
        },
        {
          "name": "diffRes",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "From this table, we can conclude that, in almost all of the groups, there are no significant differences between the two strategies. Exceptions are two groups GKD instances with  elements, and MDG-c instances with  elements. This is where the first improvement strategy significantly outperforms the best improvement strategy (with respect to the best found solutions)."
        },
        {
          "content": "On the entire set of instances, the VNS_MinDiff_FI heuristic performs slightly better (see row ‘Total Average’ in Table 1, i.e., compare 1767.12 and 1782.24 for total average values for VNS_MinDiff_FI and VNS_MinDiff_BI, respectively). The advantage of VNS_MinDiff_FI basically comes from the results obtained on the largest MDG-c instances. Indeed, VNS_MinDiff_BI may spend more time exploring a whole neighborhood of a current solution before making a move. "
        },
        {
          "content": "The similar pattern regarding comparison of the first and the best search strategies in solving travelling salesman problem has been observed in [11: First vs Best Improvement …. ]."
        },
        {
          "content": "(iii) Average solution values offered by VNS_MinDiff_BI are better than those found by VNS_MinDiff_FI on all instances from data sets GKD 500, MDG-a 500, MDG-b 500 and MDG-b 2000 (see the number of wins in Table 2). Moreover, only on data set MDG-c, VNS_MinDiff_FI succeeded to provide larger number of better average solution values than VNS_MinDiff_BI. In addition, on 138 out of total 190 instances, VNS_MinDiff_BI provides better average solution values, while VNS_MinDiff_FI do so on just 30 instances. However, VNS_MinDiff_BI provides better best found solution value than VNS_MinDiff_FI on only 46 instances, while VNS_MinDiff_FI do so on 45 instances."
        }
      ],
      "analysis": "In this paper a VNS algorithm is designed to solve the Minimum differential dispersion problem. Both first and first improvement are implemented and tested. Even if for some problem some algorithm seems to distinguish themselves, after a deeper analysis, the paper conclude that in almost all cases ''there are no significant differences between the two strategies''"
    },
    {
      "name": "Local Search Methods for the Particle Therapy Patient Scheduling Problem",
      "url": "https://www.ac.tuwien.ac.at/files/pub/hackl_18.pdf",
      "date": "08-2018",
      "type": "thesis",
      "problem_tackled": [
        {
          "short_name": "PTPSP",
          "name": "Particle Therapy Patient Scheduling Problem",
          "description": "'' scheduling a set of therapies within a planning horizon of several months''"
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": [
            {
              "relevant_text": [0]
            }
          ]
        },
        {
          "name": "diffRes",
          "additional_infos": {
            "relevant_texts": [2]
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "Particle Therapy Patient Scheduling Problem"
          }
        },
        {
          "name": "redoExp",
          "additional_infos": {
            "relevant_texts": [3]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "However, it can be shown [HM06] that there are optimization problems where next improvement produces better solutions on some start solutions while best improvement performs better on other start solutions. The random neighbour strategy is the least targeted and is often used in more advanced algorithms to escape local optima."
        },
        {
          "content": " We will also compare different step functions and show that the next improvement step function with a randomized order of neighbours is superior to the other ones."
        },
        {
          "content": "Regarding the average objective values, however, there is almost no difference.  A Wilcoxon rank sum test with a significance level of 95% shows that the best improvement step function indeed does not perform significantly better. Because the objective values with both step functions are similarly good, the running time is the decisive criterion."
        },
        {
          "content": "Because local search can be used with both next and best improvement, we first have to find out which step function is better w.r.t. our problem setting. To that end, we applied the local search method first with next improvement and then with best improvement using the neighbourhood structure N S1 2,d."
        }
      ],
      "analysis": "This paper uses a local search algorithm algorithm similar to the one of First vs Best Improvement: an empirical study to tackle the problem of scheduling patient surgeries. Both first and best improvement strategies are tested. After a deeper analysis with a Wilcoxon rank sum test, the paper conclude that there is no significant difference in final cost reaced between the two possibilities"
    },
    {
      "name": "Local search pivoting rules and the landscape global structure",
      "url": "https://dl.acm.org/doi/10.1145/3449639.3459295",
      "type": "paper",
      "date": "06-2021",

      "problem_tackled": [
        {
          "short_name": "NK landscapes",
          "name": "NK landscapes",
          "description": "https://en.wikipedia.org/wiki/NK_model"
        },
        {
          "short_name": "UBQP",
          "name": "unconstrained binary quadratic landscape",
          "description": ""
        }
      ],
      "tags": [
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": " iterated local search (ILS)"
          }
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": [
              "NK-landscape",
              "unconstrained binary quadratic landscape"
            ]
          }
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {
            "why": "redo the experiments for their specific problem. Do not cite the property",
            "relevant_text": [4]
          }
        },
        {
          "name": "sameRes",
          "additionnal_infos": {
            "relevant_text": [2, 3]
          }
        },
        {
          "name": "CL",
          "additionnal_infos": {}
        },
        {
          "name": "redoExp",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "we focus on the following pivoting rules: • The best improvement (B) [...]• The first improvement (F)"
        },
        {
          "content": "For each triplet (P, pivoting rule, landscape), we conducted 30 runs from the same set of 30 randomly generated solutions. We use a given number of climbing processes as stopping criterion: 10 000 on NK landscapes and 5 000 on UBQP landscapes, as these landscapes were found to be easier to solve [24]"
        },
        {
          "content": "table1LandscapeStruct.png"
        },
        {
          "content": "table2LandscapeStruct.png"
        },
        {
          "content": "Two widely-used classical pivoting rules are the first and best improvement. They have both been empirically compared on various contexts [6"
        }
      ],
      "analysis": "FIvsBI is used as a reference for a paper that compares both strategy for the specific problem of the TSP (with other problems)"
    },
    {
      "name": "Stochastic Pareto local search: Pareto neighbourhood exploration and perturbation strategies",
      "url": "https://link.springer.com/article/10.1007/s10732-012-9205-7",
      "date": "07-2012",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "PLS",
          "name": "Pareto Local Search",
          "description": "Local search in a multiobjective setting"
        },
        {
          "short_name": "bQAPs",
          "name": "correlated bi-objective quadratic assignment problems (bQAPs)",
          "description": "''The solutions of bQAPs are represented by permutations of facilities to different locations.'' Problem of facilities to satisfy a demand"
        }
      ],
      "tags": [
        {
          "name": "redoExp",
          "additionnal_infos": {
            "relevant_text": [0, 1]
          }
        },
        {
          "name": "CL",
          "additionnal_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "PLS variants"
          }
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "bQAPs"
          }
        },
        {
          "name": "sameRes",
          "additionnal_infos": {
            "relevant_text": [1, 4]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "The performance of LS algorithms depends on the choice of improvement strategy (Hansen and Mladenović 2006; Liefooghe et al. 2011). Until recently, best improvement algorithms were commonly used for the neighbourhood exploration strategies in Pareto local search algorithms. The first non-dominating neighbour (Liefooghe et al. 2011) stops after the first non-dominating solution found. The first dominating neighbour (Aguirre and Tanaka 2005; Liefooghe et al. 2011; Dubois-Lacoste et al. 2011b) stops after the first dominating solution."
        },
        {
          "content": "We show here though that first improvement neighbourhood exploration strategies can be more efficient. A similar observation has recently been made in (Liefooghe et al. 2011). Pareto neighbourhood exploration strategies—or improvement strategies are the equivalent of single-objective improvement strategies (Hansen and Mladenović 2006) for multi-objective spaces"
        },
        {
          "content": "The best performance with SPLS is obtained using the first Pareto improvement strategy, which stops the neighbourhood exploration when a dominating solution is found, and using stochastic perturbation operators which exploit the particularities of the search space"
        },
        {
          "content": "We apply SPLS on a set of large, correlated bi-objective quadratic assignment problems (bQAPs)"
        },
        {
          "content": "The overall conclusion is that the SPLS algorithm with the highest performance is fGPLS using the first improvement Pareto neighbourhood exploration IF and both perturbation methods, mutation and path-guided mutation. The bQAP, where the difference between fGPLS and the other SPLSs is maximal, has the largest number of facilities and the largest correlation, bQAP(100, 0.75)."
        }
      ],
      "analysis": "This publication redo the test of both First and Best improvement in a pareto local search setting. They obtain similar conclusions as First vs Best Improvement: an empirical study."
    },
    {
      "name": "Combining tabu Hopfield network and estimation of distribution for unconstrained binary quadratic programming problem",
      "url": "https://www.sciencedirect.com/science/article/pii/S095741741100844X?casa_token=9NHibdoQAKMAAAAA:GTG5gHNvhgOZej_7rz49x4YU_ybKVFmkO2rWzlgOmDykIWXBJXOxxSQ58xsdw2PmErOZaLmvMYo",
      "type": "paper",
      "date": "12-2011",
      "problem_tackled": [
        {
          "short_name": "UBQP",
          "name": "Unconstrained binary quadratic programming problem",
          "description": "maximizing a quadratic 0–1 function"
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "UBQP"
          }
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "THNN-EDA"
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [1]
          }
        },
        {
          "name": "CL",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "In general, the first improvement strategy outperforms the best improvement (Hansen & Mladenović, 2006). This phenomenon has already been observed in many combinatorial optimization problems (Hansen and Mladenović, 2006, James et al., 2009)."
        },
        {
          "content": "THNN–EDA and TM use different selection strategies. In the TM, the selection strategy is the best improvement which chooses the admissible move that has the most improvement or the least degradation (increase) in the energy function value. In the THNN–EDA, the selection strategy is the first improvement which chooses or accepts the admissible move that has the first admissible or the least degradation (increase) in the energy function value. If there is no improving move at a time, both the first and best improvement strategies choose the least degradation move in order to perform a mild diversification or escape from local minima."
        },
        {
          "content": "THNN–EDA initialize v randomly with 0 or 1;"
        }
      ]
    },
    {
      "name": "Constructive Heuristics for the MulticompartmentVehicle Routing Problem with Stochastic Demands",
      "url": "https://pubsonline.informs.org/doi/abs/10.1287/trsc.1100.0353?casa_token=Onpxvggb2T4AAAAA:LffgUbXDBOQAZ7oqWmKzpRCV_xbgo119mc8rhwRl9Yu3lYKR5Pbj-pvOhi3hZzW3cmb3i0movk3n",
      "type": "paper",
      "date": "02-2011",
      "problem_tackled": [
        {
          "short_name": "VRPSD",
          "name": "vehicle routing problem with stochastic demands ",
          "description": "designing transportation routes ofminimal  expected  cost  to  satisfy  a  set  of  customers  with  random  demands  of  known  probability  distribu-tion"
        },
        {
          "short_name": "MC-VRPSD",
          "name": "multicompartment VRPSD ",
          "description": "each customer demands several products that, because of incompatibility constraints, mustbe loaded in independent vehicle compartment"
        }
      ],
      "tags": [
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "post optimization of Stochastic Clarke and Wright Heuristic + 2 other heuristics"
          }
        },
        {
          "name": "near-tsp",
          "additional_infos": {}
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "notUsedInPaper",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "For  further  details  on  the  2-Opt  heuristic,  the  readeris  referred  to  Hansen  and  Mladenovi ́c  (2006)"
        },
        {
          "content": "Finally,the  procedure  is  restarted  from  the  top  following  afirst improvementconfiguration. The S2-Opt procedurerepeats until it cannot find any more improvements"
        },
        {
          "content": "The  proposed  post-optimization  procedure,  hence-forth called stochastic 2-Opt (S2-Opt), is described inAlgorithm 3. "
        },
        {
          "content": "Therefore,  to  enhance  the  per-formance of the three proposed heuristics, we imple-mented  a  post-optimization  procedure  based  on  thewell-known 2-Opt improvement heuristic for the TSP."
        }
      ],
      "analysis": "FIvsBI is only used as a reference for further explainations on the implementation of First or Best Improvement"
    },
    {
      "name": "Variable neighborhood search for the heaviest k-subgraph",
      "url": "https://www.sciencedirect.com/science/article/pii/S0305054809000021?casa_token=dv1Ak9k4OlcAAAAA:hCTrBptBw6U0XppcKwXr-NoWcCgfYQ5o9G7qZx7C2Kqs9uKNUY2IdK5RlFQZHV9uhCbpJM8TIfs",
      "type": "paper",
      "date": "11-2009",
      "problem_tackled": [
        {
          "short_name": "HSP",
          "name": "heaviest k-subgraph problem",
          "description": "''finding a subgraph  with the maximum total edge weight''"
        }
      ],
      "tags": [
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "HSP"
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "redoExp",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "sameRes",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "From Fig. 1 we can easily see that the first improvement strategy (LS2) outperforms best improvement (LS1), for the 500 initial points chosen at random; that is, the local minima obtained by LS2 tend to be closer to the target point (the best known solution) at the origin. This phenomenon has already been observed in many combinatorial optimization problems (see e.g., [17])."
        },
        {
          "content": "We first compare the two greedy constructive heuristics (drop and add) and two local search strategies (best and first improvement)"
        }
      ]
    },
    {
      "name": "Learning Improvement Heuristics for Solving Routing Problems",
      "url": "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9393606",
      "type": "paper",
      "date": "2018",
      "problem_tackled": [
        {
          "short_name": "TSP",
          "name": "travelling salesman problem",
          "description": "Try to find the smallest tour that goes through each town"
        },
        {
          "short_name": "CVRP",
          "name": "Capacitated Vehicle Routing Problem",
          "description": "Try to find the shortest route that satisfies the capacity constraints to satisfy the demand of each customer"
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additionnal_infos": {}
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {}
        },
        {
          "name": "dontUse",
          "additionnal_infos": {}
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "deep learning"
          }
        }
      ],
      "analysis": "This paper is about an neural network RL framework to solve the TSP problem. The FIvsBI paper is used as a reference for the details about the FI and BI algorithm"
    },
    {
      "name": "Variable neighbourhood simulated annealing algorithm for capacitated vehicle routing problems",
      "url": "https://www.tandfonline.com/doi/pdf/10.1080/0305215X.2013.791813?needAccess=true",
      "type": "paper",
      "date": "2014",
      "problem_tackled": [
        {
          "short_name": "CVRP",
          "name": "Capacitated Vehicle Routing Problem",
          "description": "Try to find the shortest route that satisfies the capacity constraints to satisfy the demand of each customer"
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additionnal_infos": {}
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "VNSA"
          }
        },
        {
          "name": "notSure",
          "additionnal_infos": {
            "why": "use first improvement but not in link with paper diretcly"
          }
        }
      ],
      "analysis": "The FIvsBI publication is used as a reference for the original algorithm of the neighbourhood list with the 2-opt heuristic"
    },
    {
      "name": "A general variable neighborhood search for solving the uncapacitated r-allocation p-hub median problem",
      "url": "https://link.springer.com/content/pdf/10.1007/s11590-015-0867-6.pdf",
      "date": "2017",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "p-hub median problem",
          "name": "p-hub median problem",
          "description": "choosing p hub locations from a set of nodes with pairwise traffic demands in order to route the traffic between the origin-destination pairs at minimum cost. We accept general assumption that transportation between non-hub nodes is possible only via r-hub nodes, to which non-hub nodes are assigned"
        }
      ],
      "tags": [
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "p-hub median problem"
          }
        },
        {
          "name": "dontUse",
          "additional_infos": {}
        },
        {
          "name": "notUsedInPaper",
          "additional_infos": {}
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "not-follow-FIvsBI",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "ow we will describe a greedy heuristic [28] so to get greedy solution. In order to construct a greedy solution, it is important to determine in advance the following functions: function g(h)—the attractiveness of node h to serve as a hub, and aloc(i,h)—the influence of allocating non-hub node i to hub h. For that purpose, we use the same functions as proposed in [28]. A more precise description of a greedy heuristic is given bellow."
        },
        {
          "content": "Therefore, sometimes it is more beneficial to explore the subset of the neighborhood than the whole neighborhood, reducing the CPU time for the intensification but increasing the time for diversification (see e.g. [12]).",
          "what": "citation First vs Best"
        },
        {
          "content": "Such cardinality obviously increases chances to find an improvement in that nested neighborhood. The outline of Nest-VND procedure is provided below. The first improvement strategy, in which an improving move is executed as soon as it is detected, is used."
        },
        {
          "content": "algorithm2"
        }
      ],
      "analysis": "The FIvsBI is used to compare first and best improvement only regarding the ''CPU time for intensification''"
    },
    {
      "name": "A local search heuristic for the (r|p)-centroid problem in the plane",
      "url": "https://www.sciencedirect.com/science/article/pii/S0305054813001317?casa_token=Xn7G7VHs12MAAAAA:pNa5c40qtERbki4ZU4vzaArMTncYd1rQrVxm13K3-qMZBDQx6yG3SoKZozPFevV_Uj_jLz_k0fM",
      "type": "paper",
      "date": "12-2014",
      "problem_tackled": [
        {
          "short_name": "(r|p)-centroid problem",
          "name": "(r|p)-centroid problem",
          "description": "two players, called a leader and a follower, open facilities to service clients. Clients are identified with their location on the Euclidean plane. Facilities can be opened anywhere in the plane. At first, the leader opens p facilities. Later on, the follower opens r facilities. Each client patronizes the closest facility. Each player maximizes own market share. The goal is to find p facilities for the leader to maximize his market share"
        }
      ],
      "tags": [
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "notSure",
          "additional_infos": {
            "what": [
              "can we be sure that after a shaking the solution is random and not slightly improved"
            ]
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_texts": [0]
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "(r|p)-centroid problem"
          }
        },
        {
          "name":"diff-algorithm",
          "additional_infos":{
            "algorithm":"ALT and D-ALT"
          }
        },
        {
          "name":"notUsedInPaper",
          "additional_infos":{}
        }
      ],
      "extracted_informations": [
        {
          "content": "We investigate these subneighborhoods sequentially and apply the first improvement rule [17] for the local search at the Step 2(b) of the method. "
        },
        {
          "content": " The initial solution is generated by the alternating heuristic with the clustering procedure"
        }
      ],
      "analysis":"The conclusion of FIvsBI is only cited in the"
    },
    {
      "name": "Simultaneous optimisation of products, processes, and people in development projects",
      "url": "https://www.tandfonline.com/doi/full/10.1080/09544828.2012.727206?casa_token=laCYhJMVaVAAAAAA%3AIl4I92rBX2d2nehmpKEorBV7xnzCyJEguPuRi9IiVkfpnsfmCzkk-rTuAlY9cnSZf34iDMdizZVKRA",
      "date": "11-2011",
      "problem_tackled": [
        {
          "short_name": "DMS",
          "name": "domain-spanning rules",
          "description": "used in the construction of a multi-domain objective function (MDOF) in order to optimise DSMs across the three domains. Domain-spanning rules formalise the relationship between two or more domains based on logical and empirical evidence, which is a missing construct in the multi-DSM literature"
        },
        {
          "short_name": "Organisations involved in product development",
          "name": "Organisations involved in product development",
          "description": "constantly introduce new products using development teams within the organisation. These teams carry out PD activities using the established development processes in order to produce new products. Traditionally, these three domains (product, process, and people) are treated separately and individual optimisation is attempted for each domain (i.e. without regard for the other two domains). The result is a group of three individual-domain optimal solutions instead of a single-multi-domain optimal solution. The main objective of this paper is to formulate and find the multi-domain optimal solution for a PD project"
        }
      ],
      "tags": [
        {
          "name": "notSure",
          "additionnal_infos": {
            "what": ["if use greedy solution for FI and BI"]
          }
        },
        {
          "name": "redoExp",
          "additionnal_infos": {
            "relevant_text": [1]
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "sameRes",
          "additionnal_infos": {
            "relevant_text": [2]
          }
        },
        {
          "name": "CL",
          "additionnal_infos": {}
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "domain-spanning rules"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "The available heuristics are classified as either improvement or constructive methods (Osman and Potts 1989). A constructive heuristic is a building of a solution from the data by examining the characteristics of the problem to be solved. This construction is hard to figure out in different applications. On the other hand, the improvement heuristic initially starts with a random solution and then endeavours to decrease the cost of the OF by allowing a series of local changes. The quality of the final solution depends on the starting solution and the rules used to generate neighbouring solutions. Thus, a good approach is considered when a constructive heuristic is applied to the result obtained from an improvement method (Mladenovi and Hansen 1997, Hansen and Mladenovi 2006)."
        },
        {
          "content": "4.3.3. Summary of the proposed heuristics We have three factors at two levels each: constructive versus improvement method, FI versus BI, and with SA using the modified cooling schedule versus without SA"
        },
        {
          "content": "figure6"
        },
        {
          "content": "Our first solution procedure constructs the associated team and product DSMs using a random sequence of the process and then varies the process DSM using an improvement method (column 6 in Table 7). The constructive heuristic for the teams in the people DSM, given a specific process sequence, is as follows and the constructive heuristic for clusters in the product DSM is shown in Appendix 2."
        }
      ]
    },
    {
      "name": "Less is more approach: basic variable neighborhood search for the obnoxious p -median problem",
      "url": "https://onlinelibrary.wiley.com/doi/full/10.1111/itor.12646?casa_token=d4Ek8tPwOxEAAAAA%3AGG4lSLOzSXbU2qqXo9zXrz0hDvu_i30pX_TIaqkGL-kJymAlf2niCpQ9Zlpf0WCt8tixr7TGzWm_ZSXi",
      "date": "03-2019",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "OpMP",
          "name": "obnoxious p-median problem with the interchange neighborhood structure",
          "description": "Obnoxious location problems are those that take into account the so-called obnoxious or semiobnoxious effects. These effects often occur when it is desired that a facility be located as far as possible from an inhabited center (obnoxious effect) or when a facility cannot be located far enough, although its closeness can have immediate disturbing or dangerous effects (semiobnoxious effect). Location problems with obnoxious effect arise when locating nuclear power plants, chemical plants, and dump sites, while examples of location problems with semiobnoxious effect include locating airports, recycle plants, and so on."
        }
      ],
      "tags": [
        {
          "name": "redoExp",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "sameRes",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "OpMP"
          }
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "redoExp",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "CL"
        }
      ],
      "extracted_informations": [
        {
          "content": "Finally, local search LS_BI exhibits the worst performance regarding the solution quality provided. It confirms the observations obtained by comparative analysis on other combinatorial optimization problems (see, e.g., Hansen and Mladenović, 2006): BI is the worst choice if the initial solution is taken at random. For the random initial solution, here we show that the semirandom or FBI strategy can be better than FI."
        }
      ]
    },
    {
      "name": "Hill-climbing Strategies on Various Landscapes: An Empirical Comparison",
      "url": "https://dl.acm.org/doi/pdf/10.1145/2463372.2463439?casa_token=--4F1M1f-0QAAAAA:cPbGKoqeoIRdzswo4rnNCk3pVi10e1jotRYWhMKNiYd5CbiALUtc_f3t4kpkHoR1oTSHwWJ53En3kg",
      "date": "07-2013",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "NK landscapes",
          "name": "NK landscapes",
          "description": "https://en.wikipedia.org/wiki/NK_model"
        }
      ],
      "tags": [
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "NK landscape"
          }
        },
        {
          "name": "redoExp",
          "additional_infos": {
            "relevant_texts": [3]
          }
        },
        {
          "name": "sameRes",
          "additional_infos": {
            "relevant_texts": [3]
          }
        },
        {
          "name": "notUsedInPaper",
          "additional_infos": {
            "relevant_text": [1],
            "why": "only cite the First vs Best Improvement paper: the property is not evocated, used or intentionnaly investigated"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "First, the pivoting rule choice. To the best of our knowledge, there is no real consensus on the benefit of using a best-improvement strategy rather than a first-improvement one, or vice versa"
        },
        {
          "content": "Several studies on local search behaviors has been proposed for specific problems, such as SAT [2] or TSP [3]."
        },
        {
          "content": "All climbers start from a random configuration, and stop after 10.N2 configuration evaluations (unless for basic move policy which stops when a local optimum is reached)"
        },
        {
          "content": "table3"
        }
      ],
      "analysis": "This paper investigates the strategies to build a hill climbing algorithm for a NK landscape depending of its rugosity. With the result provided it can be observed that with a random initial solution, depending of the landscape rugosity no clear algorithm (between first and best improvement) detaches itself in all configurations."
    },
    {
      "name": "On the Efficiency of Worst Improvement for Climbing NK-Landscapes",
      "url": "https://dl.acm.org/doi/pdf/10.1145/2576768.2598268?casa_token=bFN2JN0Na08AAAAA:qv_7KJB_2G_RR0zk_hApOFMGXxcCt4Nv3YVQstfX5fRK6FyxngS4elPENvH6zgGSU7zBae1Yh7As1g",
      "type": "paper",
      "date": "07-2014",
      "problem_tackled": [
        {
          "short_name": "NK landscapes",
          "name": "NK landscapes",
          "description": "https://en.wikipedia.org/wiki/NK_model"
        }
      ],
      "tags": [
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "NK landscapes"
          }
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {}
        },
        {
          "name": "redoExp",
          "additionnal_infos": {}
        },
        {
          "name": "diffRes",
          "additionnal_infos": {}
        },
        {
          "name": "CL",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "This aspect is often debated, especially in iterated local search studies. Last, the pivoting rule defines the acceptance criterion of neighbors during the search. The paper focuses on this major aspect, which is rarely investigated, except for comparing first and best improvements on specific problems [2, 10]"
        },
        {
          "content": "table3"
        },
        {
          "content": "First, we observe that best improvement systematically achieves best average results on smooth instances (K = {1, 2}), while worst improvement outperforms other variants on all other landscape"
        },
        {
          "content": "the superiority of first improvement against best improvement on rugged one"
        },
        {
          "content": "For each couple (N, K), we generated 10 random landscapes."
        }
      ],
      "analysis": "This paper investigate the influence of the pivoting rule on the final solution. It is found that with a random initial solution, depending of the rugosity of the landscape, the best pivoting rule to use changes. Tha paper evocates the fact that it has been observed that for smooth landscapes, the best improvement strategy is better and for rugged landscapes first improvement is better"
    },
    {
      "name": "DISTANCE-CONSTRAINED VEHICLE ROUTING PROBLEM: EXACT AND APPROXIMATE SOLUTION (MATHEMATICAL PROGRAMMING)",
      "url": "https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.426.4659&rep=rep1&type=pdf",
      "date": "2013",
      "type": "thesis",
      "problem_tackled": [
        {
          "short_name": "ADVRP",
          "name": "asymmetric distance-constrained vehicle routing problem",
          "description": "looks at finding vehicle tours to connect all customers with a depot, such that the total distance is minimised; each customer is visited once by one vehicle; every tour starts and ends at a depot; and the travelled distance by each vehicle is less than or equal to the given maximum value"
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "MSBB-ADVRP"
          }
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {}
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "ADVRP"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "In general, best improving can be more effective than first improving but with more time consumption. In some cases the opposite is correct (when the initial solution is not chosen at random) based on an empirical study see [82]."
        }
      ],
      "analysis": "This thesis only mention the conclusion of First vs Best improvement: an empirical study in its litterature review"
    },
    {
      "name": "New variants of variable neighbourhood search for 0-1 mixed integer programming and clustering",
      "url": "https://bura.brunel.ac.uk/bitstream/2438/4602/1/FulltextThesis.pdf",
      "date": "2010",
      "type": "thesis",
      "problem_tackled": [
        {
          "short_name": " 0-1 mixed integer programming",
          "name": " 0-1 mixed integer programming",
          "description": ""
        },
        {
          "short_name": "clustering",
          "name": "clustering",
          "description": ""
        }
      ],
      "tags": [
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "For a detailed study on the use of best improvement vs. first improvement within a local search algorithm, the reader is referred to [165]."
        }
      ],
      "analysis": "This thesis only refer to First vs Best improvement for further details beteen first and best improvement differences"
    },
    {
      "name": "Win-win possibilities through capacity tariffs and battery storage in microgrids",
      "url": "https://www.sciencedirect.com/science/article/pii/S1364032119304381?casa_token=fsn2T34092YAAAAA:ph5SkxoPfF0rELnhiLcgFZh84JTlP3sPCWUjgNrY9Y7w8mWk0fPUEoahD9DkYVA2vEOwefUPCF8",
      "date": "10-2019",
      "problem_tackled": [
        {
          "short_name": "tariff design on microgrids",
          "name": "tariff design on microgrids",
          "description": ""
        }
      ],
      "tags": [
        {
          "name": "redoExp",
          "additionnal_infos": {}
        },
        {
          "name": "dontUse",
          "additionnal_infos": {}
        },
        {
          "name": "notSure",
          "additionnal_infos": {
            "what": [
              "results do not seem to be orientedd to interprete the difference in performance betwween first and best improvement strategy"
            ],
            "why": "reduction of dimension is the only focuseven if first and best improvement tested"
          }
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "tariff design on microgrids"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Both of these heuristics are widely used to solve numerous optimization problems, see [24] for a comparissons of both strategies applied on a different problem and [25] for a more theoretical discussion of these two improvement strategies."
        }
      ],
      "analysis": "this paper does not use the property of the original publication. It tries the two algorithm but does not seem to report the differences if present between the two strategies. The extracted_information 0 source 24 is FIvsBI. It could be counted in the account of impacted publications as FIvsBI is used as a reference for all details regarding the differences between the two algorithms"
    },
    {
      "name": "SOME APPLICATIONS OF CONTINUOUS VARIABLE NEIGHBOURHOOD SEARCH METAHEURISTIC (MATHEMATICAL MODELLING)",
      "type": "thesis",
      "url": "https://www.semanticscholar.org/paper/Some-applications-of-continuous-variable-search-Rajab/109405688d04138782050eef9dfd1ac50a107e7c",
      "date": "2012",
      "problem_tackled": [
        {
          "short_name": "censored quantile regression",
          "name": "censored quantile regression"
        },
        {
          "short_name": "the circle packing problem",
          "name": "the circle packing problem"
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {}
        },
        {
          "name": "notSure",
          "additionnal_infos": {
            "what": ["first or best not used"],
            "why": ["logically one of them or another algorithm must be used"]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "If the initial solution is found by using some constructive methods, the best improvement heuristic is slightly better than the first improvement (Hansen and Mladenovi´c, 2006). It may be even faster. But if the initial solution has been found randomly, the better choice is to use the first improvement heuristic (Hansen and Mladenovi´c, 2006)."
        }
      ]
    },
    {
      "name": "A hybrid iterated local search metaheuristic for the flexible job shop scheduling problem",
      "url": "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8786274",
      "date": "10-2018",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "FJSP",
          "name": "flexible job shop scheduling problem",
          "description": "we have a set of jobs and a set of machines. A job is characterized by a set of operations that must be processed in a predetermined order. Each operation can be processed in a specific set of machines and each of these machines can process at most one operation at a time, respecting the restriction that before starting a new operation, the current one must be finished. scheduling is an assignment of operations at time intervals on machines. The classic objective of the FJSP is to find a schedule that minimizes the completion time of the jobs, called makespan"
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "FJSP"
          }
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "modified version of BI for the job shop problem"
          }
        },
        {
          "name": "CL",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "The Local Search 1 (LS1) implemented was based on the best improvement method [27] and is presented in Algorith 2"
        },
        {
          "content": "algorithm2"
        },
        {
          "content": "Initial Solution: The construction of the initial solution s is performed in a random way. The idea is based on randomly selecting the jobs to be added in s, and when there is flexibility, randomly choose one machine among the set of alternative machines."
        }
      ]
    },
    {
      "name": "Learning 2-opt Local Search from Heuristics as Expert Demonstrations",
      "url": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9533697&casa_token=ZV6cAMDiBTAAAAAA:jmEtqNlsd2zZPqEApJ-EHhga7ypPaBmT7RJU9KU-TcpuM-QTunuvh7CmR3hDnsFJuQHE6UIfxpc",
      "type": "paper",
      "date": "07-2021",
      "problem_tackled": [
        {
          "short_name": "tsp",
          "name": "Traveling Salesman Problem",
          "description": "Try to find the smallest tour that goes through each town"
        },
        {
          "short_name": "train RL model",
          "name": "train RL model",
          "description": "train RL model to solve the TSP"
        }
      ],
      "tags": [
        {
          "name": "near-tsp",
          "additionnal_infos": {}
        },
        {
          "name": "same-heuristic",
          "additionnal_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "CL",
          "additionnal_infos": {
            "why": "no mention of NL"
          }
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "train a RL algorithm to solve TSP"
          }
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "RL"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Two well-studied choices are selecting the first set of edges at which an improvement is possible, i.e., First Improvement (FI) and the best reducing cost move, i.e., Best Improvement (BI). On average, selecting BI over FI gives worse results if the initial solution is chosen at random. However, when initialized with a greedy constructive heuristic, BI is better and faster on average [33]."
        },
        {
          "content": "In our experiments, a maximum of 100,000 samples of demonstration data is gathered using either FI or BI on 5,120 TSP instances over trajectories of a maximum of 400 steps. When this procedure generated more than 100,000 samples, we undersampled the expert samples uniformly at random. Each experiment block is repeated for FI and BI demonstrations separately. During RL, 5,120 instances of the TSP were generated on the fly and simulated for T = 200 steps."
        }
      ]
    },
    {
      "name": "Extracting and Exploiting Interaction Information in Constraint-Based Local Search",
      "url": "https://stax.strath.ac.uk/concern/parent/6m311p39d/file_sets/2514nk75x",
      "date": "07-2021",
      "type": "thesis",
      "problem_tackled": [],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {}
        },
        {
          "name": "notSure",
          "additionnal_infos": {
            "what": [
              "details about where when FI/BI are used for whwich problem"
            ],
            "why": ["thesis that tries separate neighbourhood from model"]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Work by Hansen and Mladenović [2006] on the TSP using the 2-opt strategy gives results indicating that First Improvement is the better choice."
        },
        {
          "content": "The neighbourhoods support three different search methods: full exploration, first improvement and best improvement. In full exploration mode the neighbourhood creates all the neighbouring solutions and adds them along with their evaluations into the Neighborhood for consideration."
        }
      ]
    },
    {
      "name": "Partial neighborhood local searches",
      "url": "https://onlinelibrary.wiley.com/doi/full/10.1111/itor.12983?casa_token=EtSTmxHNf58AAAAA%3A8NPbmZsuQ6ixqFg9l-id3KUMuqIj5dCVdIbIw4C58Ndzscullc0o6ZY8X116AXn34ubLRSY7Xq1E8PPz",
      "type": "paper",
      "date": "04-2021",
      "problem_tackled": [
        {
          "short_name": "NK landscapes",
          "name": "NK landscapes",
          "description": ""
        },
        {
          "short_name": "Unconstrained Binary Quadratic Programming",
          "name": "Flow-shop scheduling",
          "description": ""
        },
        {
          "short_name": "Quadratic Assignment",
          "name": "Quadratic Assignment",
          "description": ""
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {}
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "NK landscapes - Flow-shop scheduling - Quadratic Assignment"
          }
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "Partial neighborhood local searches"
          }
        },
        {
          "name": "CL",
          "additionnal_infos": {}
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {
            "why": "propose an other method to choose neighbour"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Some studies investigating climbers pivoting rules showed that among widely used first and best improvement, the first improvement is, in general, the most likely to reach high local optima (Hansen and Mladenović, 2006), especially when used in the early phase of the search (Whitley et al., 2013). In general, the first improvement is particularly efficient to climb significantly rugged landscapes while the best improvement leads to better local optima on highly smooth and extremely rugged landscapes (Ochoa et al., 2010; Basseur and Goëffon, 2013). "
        }
      ],
      "analysis": "This paper only mentions First vs Bestimprovement: an empirical study and the studied property of this bibliography. It does not use it after that as a new algorithm and method to choose the next neighbour is used"
    },
    {
      "name": "Incremental Improvement for Sub-optimal Euclidean TSP Paths Generated by Traditional Heuristics",
      "url": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9411580&casa_token=OQ-Dq903thkAAAAA:_wtmtbjiGAdy-NoP54AeiQy-9Cevy95tNjS1G6nVNFr1BI800gPzkVD2wAn_IdxLUI3CZrO1rmU&tag=1",
      "type": "paper",
      "date": "12-2020",
      "problem_tackled": [
        {
          "short_name": "ETSP",
          "name": "Euclidean Travelling Salesman Problem",
          "description": "TSP in the Euclidian plane"
        }
      ],
      "tags": [
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "custom local search algorithm"
          }
        },
        {
          "name": "near-tsp",
          "additionnal_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {
            "why": "custom algorithm that does not use the property"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Hansen and Mladenovic [11] carried out an empirical study applying 2-opt starting with the NN and Greedy heuristics. They reasoned that depending on the order of the iterations, and by interrupting 2-opt operations before reaching its best, an overall better solution is found faster. This indicates that having some knowledge about the moves can potentially increase the speed in which the improvements are made."
        }
      ]
    },
    {
      "name": "A Novel Iterative Improvement Pivoting Rule for Local Search Heuristics",
      "url": "https://dl.acm.org/doi/pdf/10.1145/3067695.3082047?casa_token=rIQIz5Z3XfAAAAAA:wIifoTflbd7OaKQVrztvix-s05DkCKZvukPfEGZrML1yCrvACs-bxy4Hkk0CaFPrtVcH67dsNhI0XA",
      "date": "07-2017",
      "problem_tackled": [
        {
          "short_name": "SMTWTP",
          "name": "Single Machine Total Weighted Tardiness",
          "description": "SMTWT considers n jobs (or tasks) to be processed sequentially on a single machine. Each job i is characterized by a processing time Pi, representing the necessary time needed by the machine to process the job i, a due date di indicating the date by which a job i should be completed, and a nonnegative weightwi representing the relative importance of job i. The tardiness of job j is then defined as: Tj = max(Cj − dj , 0) where Cj = Í Pi. Cj denotes the completion time of a job j. All jobs are assumed to be available for processing at time zero. The purpose of SMTWT is to find a job sequence minimizing the total weighted tardiness over all n jobs given by: T = ÍwiTi"
        }
      ],
      "tags": [
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "Local search with Oriented iterative improvement"
          }
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "SMTWTP"
          }
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {
            "why": "propose a new heuristic"
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Best iterative improvement examines the entire neighborhood in each step to find the best improving solution. By examining the neighborhood in a given order, first iterative improvement, in contrary, stops searching at the first improving solution. Studies shows that random first iterative improvement gives good solutions in less time [4]."
        }
      ]
    },
    {
      "name": "A variable neighborhood search approach for cyclic bandwidth sum problem",
      "url": "https://www.sciencedirect.com/science/article/pii/S0950705122003124?casa_token=XY6f7Qxc_-wAAAAA:lV7ZBtqicInwLVUiY3dDSXbllKgrqCY9tenuG3T5HIxCiwgFmbmR-GIiFHStOaxqGuUZVSSp0h4",
      "date": "06-2022",
      "type": "paper",
      "problem_tackled": [
        {
          "short_name": "CBSP",
          "name": "Cyclic Bandwidth Sum Problem",
          "description": "consisting in minimizing the sum of the bandwidth of the edges of an input graph computed in a cycle-structured host graph."
        }
      ],
      "tags": [
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "VNS"
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "CBSP"
          }
        },
        {
          "name": "mention-concl-FIvsBI",
          "additional_infos": {
            "relevant_text": [0],
            "why": "implicitely cite"
          }
        },
        {
          "name": "CL",
          "additional_infos": {}
        },
        {
          "name": "useDirect-FIvsBI",
          "additional_infos": {
            "relevant_text": [1]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Once a better solution has been identified in the neighborhood of the current solution, the procedure has to determine if the search should continue from this new solution (following a first improvement strategy) or should explore the whole neighborhood of the current solution, before deciding which solution should be the next one for continuing the search (following a best improvement strategy). We refer the reader to [32] for further details about these two strategies. "
        },
        {
          "content": "The local search procedure proposed in this paper explores the insertion neighborhood () previously introduced. We summarize the steps of this procedure in Algorithm 4. The method receives an input graph and a feasible solution  as the input parameters. Then, it combines the first improvement and best improvement strategies to explore  using the insert move. Since the vertices of the solution are randomly scanned one by one (see step 7) the first improvement strategy is related to performing the insert move of the first vertex able to improve the current solution. On the other hand, for each explored vertex , the best improvement strategy is referred to only considering the best insert move for , among all possible insertions (see step 8) in the current iteration of the algorithm."
        },
        {
          "content": "algorithm4"
        }
      ],
      "analysis": "This paper refers to the original paper as a reference for more details on the differences and details between first and best improvement. It uses first improvement for one choice and best improvement for an other following the rule given in FIvsBI"
    },
    {
      "name": "Queued Pareto Local Search for Multi-Objective Optimization",
      "url": "http://www.cs.ox.ac.uk/people/shimon.whiteson/pubs/injappsn14.pdf",
      "type": "paper",
      "date": "2014",
      "problem_tackled": [
        {
          "short_name": "PLS",
          "name": "Pareto local search",
          "description": "Try to improve the pareto local search algorithm to speed up multi-objective evolutionary algorithms (used if search space too large)"
        },
        {
          "short_name": "MO-CoGs",
          "name": "multi-objective coordination graphs",
          "description": "multi-objective coordination graphs (MO-CoGs) [16], which are single-state problems from the multi-agent literature in which agents must work together in order to obtain a shared (vector-valued) reward"
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "multi-objective coordination graphs"
          }
        },
        {
          "name": "redoExp",
          "additional_infos": {
            "relevant_texts": [0],
            "note": "results to compare FI and BI not in the paper"
          }
        },
        {
          "name": "sameRes",
          "additional_infos": {
            "relevant_texts": [2]
          }
        },
        {
          "name": "diff-algorithm",
          "additional_infos": {
            "algorithm": "PLS"
          }
        },
        {
          "name": "different-problem",
          "additional_infos": {
            "problem": "multi-objective coordination graphs"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Two distinct strategies can be employed to select the next improving solution s0 from the neighborhood of s, N (s). In the best-improvement strategy the entire neighborhood N (s) is scanned for the best improvement. The selected improvement s0 is guaranteed not to be dominated by another other solution in N (s). In the first-improvement strategy, the first solution s0 in N (s) that improves s is returned immediately. Hansen and Mladenovi´c [8] find that for single-objective LS, first-improvement usually leads to better empirical results. Liefooghe et al. [9] confirm this result for PLS algorithms, as do Drugan and Thierens [5] for SPLS."
        },
        {
          "content": "Following previous work [5, 8], we can distinguish two strategies for PI, a best-improvement and a first-improvement implementation. Unlike SPLS, where improvements are applied once per iteration, we apply the improvements recursively until no improvement can be found."
        },
        {
          "content": "We compare against two non-PLS-employing MOEAs: NSGA-II and SPEA2,  and against the PLS-employing method we emprically found best for MO-CoGs: Drugan and Thierens’ first-improvement genetic SPLS [5]."
        },
        {
          "content": "To generate MO-CoGs, we follow the random graph generation procedure proposed by Roijers et al. [16]."
        }
      ],
      "analysis": "This paper try to improve pareto local search algorithms. In their algorithm they choose to use the first improvement strategy with a random initial solution. They use the results of the paper Liefooghe et al. which confirm the result of First vs Best Improvement: an empirical study for in a PLS setting"
    },
    {
      "name": "A New Local Search in the Space of Infeasible Solutions Framework for the Routing of Vehicles ",
      "url": "https://era.ed.ac.uk/bitstream/handle/1842/33177/Hamid2018.pdf?sequence=1&isAllowed=y",
      "type": "paper",
      "date": "2018",
      "problem_tackled": [
        {
          "short_name": "tsp",
          "name": "Traveling Salesman Problem",
          "description": "Try to find the smallest tour that goes through each town"
        }
      ],
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "diff-algorithm",
          "additionnal_infos": {
            "algorithm": "genetic algorithm"
          }
        },
        {
          "name": "near-tsp",
          "additionnal_infos": {}
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {
            "why": "only mentionned in the litterature review, after that other algorithm"
          }
        }
      ],
      "extracted_informations": [
        {
          "content": " On the other hand, the best improvement acceptance strategy at each of the iterations explores all neighbourhoods and returns the best solution. Both acceptance strategies find the local optimum. A comparative analysis of these two acceptance strategies can be found in Hansen and Mladenović (2006)."
        }
      ],
      "analysis": "This thesis only uses the publication FIvsBI to refer to a comparative study between first and best improvement"
    },
    {
      "name": "A General Framework for Local Search Applied to the Continuous p-Median Problem",
      "url": "https://link.springer.com/chapter/10.1007/978-3-030-19111-5_3",
      "type": "paper",
      "tags": [
        {
          "name": "exclAccess",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Problema do caixeiro viajante com coleta de prêmios e janelas de tempo",
      "url": "http://proceedings.sbmac.org.br/sbmac/article/view/752",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "deadlink",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "A quick GRASP-based method for influence maximization in social networks",
      "url": "https://link.springer.com/article/10.1007/s12652-021-03510-4",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Hybrid methodologies for symmetric and asymmetric vehicle routing problems",
      "url": "https://www.tdx.cat/handle/10803/369581",
      "tags": [
        {
          "name": "exclBook",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Modelling activities at a neurological rehabilitation unit",
      "url": "https://search.proquest.com/openview/9821ebea6fdcf51720a2aa7bd9eedd5b/1?pq-origsite=gscholar&cbl=51922&casa_token=zl2KIOEIitcAAAAA:qfh6gsh_lQwDYe1pfwRcuDv9YxlGQsciN9a3Cs7L0xH4zFAqrVwQltv6MmTBlFFtN5tRLqNTlrU",
      "tags": [
        {
          "name": "exclBook",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Learning Enhanced Optimisation for Routing Problems",
      "url": "https://arxiv.org/abs/2109.08345",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Multiobjective decomposition of integer matrices: application to radiotherapy",
      "url": "https://arxiv.org/ftp/arxiv/papers/1006/1006.1031.pdf",
      "tags": [
        {
          "name": "useDirect-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Once a decomposition is obtained, we optimize the SUvar objective by using a simple and fast TSP heuristic: the first improvement local search based on the two-edge exchange moves [12]"
        }
      ]
    },
    {
      "name": "Variable neighborhood search: basics and variants",
      "url": "https://link.springer.com/content/pdf/10.1007/s13675-016-0075-x.pdf",
      "tags": [
        {
          "name":"diff-algorithm",
          "additionnal_infos":{
            "algorithm":"VNS"
          }
        },
        {
          "name":"dontUse",
          "additionnal_infos":{
          }
        }
      ],
      "extracted_informations":[
        {
          "content":"For testing purposes, random test instances were generated in the way described in Hansen and Mladenović (2006)."
        }
      ],
      "analysis":"FIvsBI only used to specify how the instances has been generated. No"
    },
    {
      "name": "Constructive Heuristics for the Multicompartment Vehicle Routing Problem with Stochastic Demands",
      "url": "https://pubsonline.informs.org/doi/pdf/10.1287/trsc.1100.0353?casa_token=sTweCfeBtGAAAAAA:JgaQI_hSbJ-0eLqktG4OOjYhUkt7O06JzE7jX-2YpT9bJ1yzJTvVBXSHXLK9kVi8F1q3j03Hux_3",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Speed-up techniques for solving large-scale biobjective TSP",
      "url": "https://www.sciencedirect.com/science/article/pii/S0305054809000173?casa_token=A0TDbVVbtPwAAAAA:sk3ZDJeaLrV-UI5IG6P04kBpTLljxHl4e-XyvwCZTP5FcXqC5SnO2qXXqsx9Zi7ImwnQNJgxylg",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Techniques hybrides de recherche exacte et approchée: application à des problèmes de transport",
      "url": "https://homepages.laas.fr/artigues/theseBorisBontoux.pdf",
      "tags": [
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "Hansen et Mladenovi´c (2006) ont étudié l’impact de ces variantes pour le problème de Voyageur de Commerce. Ils ont montré que l’efficacité de ces différentes versions dépendait en grande partie du choix dans les solutions initiales. La version de la meilleure amélioration, qui semble la plus attirante car plus prometteuse dans l’amélioration des solutions, donnait dans leurs résultats expérimentaux des résultats significativement plus mauvais que la version de la première amélioration."
        }
      ],
      "analysis": "Only used in the litterature review"
    },
    {
      "name": "A mathematical model and a Clustering Search metaheuristic for planning the helicopter transportation of employees to the production platforms of oil and gas",
      "url": "https://www.sciencedirect.com/science/article/pii/S0360835216303382?casa_token=eE_KNMD-a4QAAAAA:CbzPz3pdqCoE9HepCC5AH4kVrWkRUMNL-kjbSvC2N_EeBG0FeUa9mvomsuB0ZdmL7ku3OmdyYlo",
      "tags": [
        {
          "name": "dontUse",
          "additional_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "In this paper, it was used a good improvement heuristic (Hansen & Mladenović, 2006) which removes each request (origin location and its respective destination) from a solution and inserts it into the best position among all the helicopters. This procedure is repeated as long as improvements are obtained. Finally, if no improvement is obtained, βi must be updated (βi ← βi + 1), and if βi reaches the threshold βmax, a disturbance must be made in the center ςi. In this paper, the neighborhood N2 is applied to ςi generating a disturbance in the cluster i"
        }
      ]
    },
    {
      "name": "Optframe: a computational framework for combinatorial optimization problems",
      "url": "https://www.researchgate.net/profile/Gloria-Perez-4/publication/259962271_Scenario_Cluster_Lagrangean_decomposition_in_stochastic_mixed_integer_programming/links/02e7e52eb5ec9c49d1000000/Scenario-Cluster-Lagrangean-decomposition-in-stochastic-mixed-integer-programming.pdf#page=63",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Order matters – A Variable Neighborhood Search for the Swap-Body Vehicle Routing Problem",
      "url": "https://www.sciencedirect.com/science/article/pii/S0377221717303934?casa_token=IIsQCPvkhQIAAAAA:FNX6xb7SjZvcTC9QXhnDXy3wDsjuCMSbhK7gz5RS00nRo7S5T3Z1bF3PkCZl4rqy66Z9Mci1_Lk",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "THE COLLISION AVOIDANCE PROBLEM: METHODS AND ALGORITHMS",
      "url": "https://burjcdigital.urjc.es/bitstream/handle/10115/5265/Thesis_F_Javier_Martin_Campo__Printed_version.pdf?sequence=1&isAllowed=y",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Learning 2-opt heuristics for the traveling salesman problem via deep reinforcement learning",
      "url": "http://proceedings.mlr.press/v129/costa20a",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "I-optimal design of mixture experiments in the presence of ingredient availability constraints",
      "url": "https://www.tandfonline.com/doi/abs/10.1080/00224065.2015.11918129?casa_token=ByWlKxn_V6YAAAAA:gt3pPMDLwo7usGO-RHcfK54hnBvy3yzqVLbr3vTB2rgOo71tHDmZnqhsNED5d4ObMwlFvbaPjAPxUg",
      "tags": [
        {
          "name": "notCited",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "New metaheuristics for solving MOCO problems: application to the knapsack problem, the traveling salesman problem and IMRT optimization",
      "url": "http://www-desir.lip6.fr/~lustt/Thesis/Main290610.pdf",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Less is more: General variable neighborhood search for the capacitated modular hub location problem",
      "url": "https://www.sciencedirect.com/science/article/pii/S0305054819301339?casa_token=A1YMPxbq3sUAAAAA:B9uh6oaaOyBGhJMkdHO5KfxUQbd58jDNGEcLByfqirREwkvSURKB7eUuJpUAtNwugtJYyEKzD9Y",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "As we can observe from the figure, sometimes a high quality solution may lead to high time-to-target and the opposite, a low quality solution may lead to low time-to-target. Similar observations are made in the earlier empirical studies conducted on VNS (see e.g., Hansen and Mladenović (2006); Mjirda et al. (2017))."
        }
      ]
    },
    {
      "name": "Variable neighborhood search",
      "url": "https://link.springer.com/chapter/10.1007/978-3-319-45403-0_4",
      "tags": [
        {
          "name": "exclAccess",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Recherche à voisinage variable pour des problèmes de routage avec ou sans gestion de stock",
      "url": "https://tel.archives-ouvertes.fr/tel-01201647/document",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Biclique completion problem: models and algorithms",
      "url": "https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.228.9965&rep=rep1&type=pdf",
      "tags": [
        {
          "name": "deadlink",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "变邻域搜索算法综述",
      "url": "http://www.cqvip.com/qk/98133a/20090s2/1003870310.html",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "deadlink",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Improvements to the Or-opt heuristic for the Symmetric Traveling Salesman Problem",
      "url": "https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.89.9953&rep=rep1&type=pdf",
      "tags": [
        {
          "name": "exclBook",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Multistart search for the Cyclic Cutwidth Minimization Problem",
      "url": "https://www.sciencedirect.com/science/article/pii/S0305054820302331?casa_token=kbl11HtWBbgAAAAA:yxqNJZCuaFjUaJUPnw6smSsDmaSm6NpZQQUrQOETOYs-xuFoOYBGHJhor_6USCuKGNBkQxQFdGQ",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "This partial exploration of the entire neighborhood is similar to the strategy of moving to the first improving solution, which has been documented to work well in multi-start settings (Hansen and Mladenovic, 2006). Our neighborhood search combines the two strategies and in addition we embed the notion of a partial exploration that focuses on Regions Of Interest (ROI)."
        }
      ]
    },
    {
      "name": "Adaptive Multi-operator MetaHeuristics for Quadratic Assignment Problems",
      "url": "https://link.springer.com/chapter/10.1007/978-3-319-07494-8_11",
      "tags": [
        {
          "name": "exclAccess",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "An Extended Neighborhood Vision for Hill-Climbing Move Strategy Design",
      "url": "https://link.springer.com/chapter/10.1007/978-3-319-58253-5_7",
      "tags": [
        {
          "name": "exclAccess",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Evolving comprehensible and scalable solvers using CGP for solving some real-world inspired problems",
      "url": "https://etheses.whiterose.ac.uk/19011/",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Neighborhood Composition Strategies in Stochastic Local Search",
      "url": "https://link.springer.com/chapter/10.1007/978-3-319-39636-1_9",
      "tags": [
        {
          "name": "exclAccess",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Theoretical and practical contributions on scatter search, variable neighborhood search and matheuristics for 0-1 mixed integer programs",
      "url": "https://tel.archives-ouvertes.fr/tel-01273425/document",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "This can be explained by the fact that the stopping condition is represented by maximum CPU time allowed for the search. Therefore, sometimes it is more beneficial to explore the subset of the neighborhood than the whole neighborhood, reducing the CPU time for the intensification but increasing the time for diversification (see e.g., [121])."
        }
      ]
    },
    {
      "name": "GRASP with Path Relinking for 2D-Bandwidth Minimization Problem",
      "url": "https://dl.acm.org/doi/pdf/10.1145/3230905.3230953?casa_token=osN8wDAMNgcAAAAA:WfyXQq3IIDV36mPRMX4KMoNu1tnxxMlmirBSRet6XGRCB6estVfci89Fsvv_wVOx6NSnLWHh1B-MiA",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "基于变邻域搜索的热轧圆钢批量调度多目标优化方法",
      "url": "http://www.cqvip.com/qk/90748a/20151/663640611.html",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnla_infos": {}
        },
        {
          "name": "deadlink",
          "additionnla_infos": {}
        }
      ]
    },
    {
      "name": "Implementasi Metode Ant Colony Untuk Traveling Salesman Problem Menggunakan Google Maps Pada Kota-Kota Di Jawa Tengah",
      "url": "https://journal.unnes.ac.id/sju/index.php/edukom/article/view/7773",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Şehir içi ulaşımın iyileştirilmesi için esnek çalışma saati yaklaşımına dayalı olarak geliştirilen matematiksel model ve değişken komşu arama algoritması",
      "url": "http://acikerisim.pau.edu.tr/xmlui/handle/11499/1818",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Entwicklung und Analyse eines Verfahrens zur effizienten Lösung des Tourenplanungs-und Laderaumoptimierungsproblems",
      "url": "http://ls11-www.cs.uni-dortmund.de/_media/techreports/tr08-07.pdf",
      "problem_tackled":[
        {
          "short_name":"VRP",
          "name":"Vehicle Routing Problem",
          "description":""
        }
      ],
      "tags": [
        {
          "name":"near-tsp",
          "additionnal_infos":{}
        },
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "Man beachte, dass diese beiden Strategien zu unterschiedlichen Resultaten führen können, wenn auch beide stets eine 2-optimale Tour ausweisen. [Hansen und Mladenovic 2006] haben beide Strategien hinsichtlich Laufzeit und Lösungsqualität untersucht. Die Ergebnisse zeigen, dass first improvement insbesondere dann schneller ist und qualitativ bessere lokale Optima findet, wenn eine „schlechte“ (zufällig generierte) Ausgangslösung verbessert werden soll. Wenn aber die Ausgangslösung qualitativ „gut“ (durch ein heuristisches Verfahren generiert) ist, haben die Autoren Vorteile auf Seiten der Best-ImprovementStrategie festgestellt, sowohl hinsichtlich Laufzeit als auch Lösungsqualität"
        },
        {
          "content": "Im Rahmen dieser Arbeit wurde die Best-Improvement-Strategie implementiert und zur Verbesserung der durch den Algorithmus I1 generierten Touren eingesetzt. Algorithmus 2 stellt die Implementierung dar. Als Datenstruktur für eine Tour r = (i0, i1, . . . , ik, ik+1), i0 = ik+1 = 0 wird ein Array der Kunden (i1, . . . , ik) verwendet."
        }
      ]
    },
    {
      "name": "Traganje za identitetom u delu Karlosa Fuentesa",
      "url": "https://nardus.mpn.gov.rs/handle/123456789/8563",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "notCited",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "MaPI: UM FRAMEWORK PARA PARALELIZAC AO DE ALGORITMOS",
      "url": "https://wellingtondantas.com.br/sbic/wp-content/uploads/sites/4/2016/07/vol8-no3-art5.pdf",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "dontUse",
          "additionnal_infos": {
            "why": "make a paralell version of the BI algorithm"
          }
        }
      ]
    },
    {
      "name": "Génération d'algorithmes de recherche locale",
      "url": "https://tel.archives-ouvertes.fr/tel-03591753/",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Variants of Deterministic and Stochastic Nonlinear Optimization Problems",
      "url": "https://tel.archives-ouvertes.fr/tel-01127048/document",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations": [
        {
          "content": "The design of local search is another core part of VNS algorithm. Local search algorithm often introduces metaheuristics or strategies, such as first/best improvement strategy [147], VND, TS, SA, PSO etc., and the determination of the algorithm selection is depending on the specific problem"
        }
      ],
      "analysis": "Only used in the litterature review"
    },
    {
      "name": "Méthodes hybrides parallèles pour la résolution de problèmes d'optimisation combinatoire: application au clustering sous contraintes",
      "url": "https://tel.archives-ouvertes.fr/tel-01609160/",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Optimal Taxi Placement Using a Maximal Covering Approach",
      "url": "https://www.diva-portal.org/smash/record.jsf?pid=diva2:1241900",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "A general variable neighborhood search for the multiple depots multiple traveling salesmen problem",
      "url": "https://iwaciii2021.bit.edu.cn/docs/2021-12/6e9715ac00374131a9d4fc14c7cf223a.pdf",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "New Variable Neighborhood Search Structure for Travelling Salesman Problems",
      "url": "https://www.researchgate.net/profile/Hande-Erol/publication/273305894_New_Variable_Neighborhood_Search_Structure_for_Travelling_Salesman_Problems/links/56eec0ab08aea35d5b9a12ea/New-Variable-Neighborhood-Search-Structure-for-Travelling-Salesman-Problems.pdf",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Solving multi‑agent path planning by local search algorithms",
      "url": "https://dr.ntu.edu.sg/bitstream/10356/62106/1/PhD%20Thesis%20%28Wang%20Wenjie%29.pdf",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Heuristics for the Mirrored Tournament Traveling Tournament Problem Based on the Home-Away Swap Neighborhood",
      "url": "https://ieeexplore.ieee.org/abstract/document/8786279",
      "type":"paper",
      "date":"2018",
      "problem_tackled":[
        {
          "short_name":"MTTP",
          "name":"Mirrored Traveling Tournament Problem",
          "description":"Dado um numero ´ n (par) de times e uma matriz de distancias ˆ Dn×n, onde cada elemento dij ∈ D contem´ a distancia entre as cidades sedes dos times ˆ i e j, temse como objetivo definir uma tabela de jogos tal que a distancia total percorrida pelos times seja a menor poss ˆ ´ıvel."
        }
      ],
      "tags": [
        {
          "name": "redoExp",
          "additionnal_infos": {}
        }
      ],
      "extracted_informations":[
        {
          "content":"A soluc¸ao inicial ˜ e gerada em duas etapas: primei- ´ramente, definimos os confrontos entre os times usando o algoritmo de Vizing, descrito em [3], [10] e [11]. Em seguida, definimos os mandos de campo para cada confronto de forma aleatoria. Neste trabalho foram consideradas as ´estrategias Primeiro Aprimorante (do ingl ´ esˆ First Improvement) e Melhor aprimorante (do inglesˆ Best Improvement), ambas definidas em [12]."
        }
      ]
    },
    {
      "name": "New ways to handle sourcing volume constraints in vehicle routing problems",
      "url": "https://thesis.eur.nl/pub/17112/Brouwer.pdf",
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {}
        },
        {
          "name":"different-problem",
          "additionnal_infos":{
            "problem":"MTTP"
          }
        },
        {
          "name":"diff-algorithm",
          "additionnal_infos":{}
        }
      ],
      "extracted_informations":[
        {
          "content":"table2",
          "comment":"6 cases where BI better (at the top for the most part), other cases FI better"
        },
        {
          "content":"A soluc¸ao inicial ˜ e gerada em duas etapas: primei- ´ ramente, definimos os confrontos entre os times usando o algoritmo de Vizing, descrito em [3], [10] e [11]. Em seguida, definimos os mandos de campo para cada confronto de forma aleatoria. Neste trabalho foram consideradas as ´estrategias Primeiro Aprimorante (do ingl ´ esˆ First Improvement) e Melhor aprimorante (do inglesˆ Best Improvement), ambas definidas em [12]."
        }
      ],
      "analysis":"this paper test both BI and FI on the MTTP problem. The initialization if partly done with an algorithm and partly random. No algorithm clearly gives better results than the other."
    },
    {
      "name": "VARIABLE NEIGHBORHOOD SEARCH (VNS) APLICADO AO PROBLEMA DE DISTRIBUIÇÃO DUTOVIÁRIA COM RESTRIÇÕES DE CAPACIDADE",
      "url": "http://www.portalabpg.org.br/site_portugues/anais/anais4/resumos/4PDPETRO_3_1_0456-1.pdf",
      "problem":[
        {
          "short_name":"PTD",
          "name":"Pipeline scheduling problem",
          "description":""
        }
      ],
      "tags": [
        {
          "name":"different-problem",
          "additionnal_infos":{
            "problem":"PTD"
          }
        },
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additionnal_infos": {
            "relevant_text": [0]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "O presente trabalho fez uso em seus modelos de uma vizinhança Dois-Opt com primeira melhoria. Essa vizinhança consiste em realizar permutações entre dois dominós até que uma solução melhor que a solução inicial seja encontrada. Vale ressaltar que no pior caso, a partir da solução inicial, serão realizadas todas as permutações possíveis entre todos os pares de dominós. A principal motivação para uso desta vizinhança foi o artigo de Hansen e Mladenovic (2006) onde esta estrutura foi exaustivamente testada no problema do Caixeiro Viajante. No exemplo ilustrado na Figura 3, a primeira melhoria ocorre no quinto escalonamento e portanto, o  valor escolhido será 49."
        }
      ]
    },
    {
      "name": "Neki optimizacioni problemi uopštenja bisekcije grafova i povezanosti grafova",
      "url": "https://nardus.mpn.gov.rs/handle/123456789/6853",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Uma Huerística baseada em busca local de pareto para o Pollution-routing problem bi-objetivo",
      "url": "https://repositorio.ufpb.br/handle/tede/8157",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "局所解を用いたフェロモンの初期化による MAX-MIN Ant System の高速化とその評価",
      "url": "https://tsukuba.repo.nii.ac.jp/record/32584/file_preview/DA06862.pdf?allow_aggs=False",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Métodos heurísticos para o problema de programação e roteamento de equipes de trabalho na restauração de redes",
      "url": "http://www.din.uem.br/sbpo/sbpo2017/pdf/169370.pdf",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "Egyoldali párosítási piacok egyenletes klaszterezési megközelítésben [védés előtt]",
      "url": "http://phd.lib.uni-corvinus.hu/1210/",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "notCited",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "HIBRIDIZAÇÃO DE HEURÍSTICAS, COM PROGRAMAÇÃO INTEIRA E MINERAÇÃO DE DADOS, PARA A SOLUÇÃO DE DUAS VARIANTES DO PROBLEMA ",
      "url": "https://www.cos.ufrj.br/uploadfile/publicacao/2964.pdf",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "dontUse",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "反復局所探索法における探索の多様化に関する調査",
      "url": "https://ous.repo.nii.ac.jp/?action=repository_action_common_download&item_id=2284&item_no=1&attribute_id=18&file_no=1",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "dontUse",
          "additionnal_infos": {}
        },
        {
          "name": "notSure",
          "additionnal_infos": {
            "what": "dontUse, citeo only the FIvsBI next to the choice of improvement without any argument indicating that a dedicated choice has been made"
          }
        }
      ]
    },
    {
      "name": "Meta-heurísticas para resolução de alguns problemas de planejamento e controle da produção",
      "url": "http://repositorio.ufes.br/bitstream/10/10728/1/tese_12675_Tese_impress%C3%A3o.pdf",
      "problem_tackled":[
        {
          "short_name":"SALBP-2",
          "name":"assembly-line balancing problem",
          "description":""
        }
      ],
      "tags": [
        {
          "name":"different-problem",
          "additionnal_infos":{
            "problem":"SALBP-2"
          }
        },
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name": "mention-concl-FIvsBI",
          "additionnal_infos": {
            "relevant_text":[0]
          }
        },
        {
          "name": "useDirect-FIvsBI",
          "additionnal_infos": {
            "relevant_text":[0]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "A Busca Local (BL1) baseia-se no best improvement method (HANSEN; MLADENOVIĆ, 2006). Seu funcionamento consiste em explorar a vizinhança de uma solução s com o objetivo de obter uma solução ótima local s ∗  que representa o melhor vizinho de s. O pseudocódigo da BL1 é apresentado no Algoritmo 9. A busca local se divide em duas vizinhanças (a) e (b"
        }
      ],
      "analysis": "mention implicitely the conclusion of First vs Best Improvement"
    },
    {
      "name": "Evde bakım hizmetlerinin değişken komşuluk arama algoritması ile çizelgelenmesi",
      "url": "http://acikerisim.pau.edu.tr/xmlui/handle/11499/2090",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name":"dontUse",
          "additionnal_infos":{}
        }
      ]
    },
    {
      "name": "Problem usmjeravanja elektriˇcnih vozila",
      "url": "https://www.fpz.unizg.hr/zits/wp-content/uploads/2019/07/KDI_pregledan_rad_Tomislav_Erdelic.pdf",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name":"mention-concl-FIvsBI",
          "additionnal_infos":{
            "relevant_text":[0]
          }
        },
        {
          "name":"notSure",
          "additionnal_infos":{}
        },
        {
          "name":"notUsedInPaper",
          "additionnal_infos":{}
        }
      ],
      "extracted_informations":[
        {
          "content":"Redoslijed izvodenja operatora utje ¯ ce na kvalitetu rješenja i vrijeme izvršavanja. Cesto se postavlja pitanje da li napraviti prvu bolju promjenu ili najbolju zabilježenu promjenu u procesu lokalne pretrage [90]. Evaluacija operatora takoder je bitan segment koji utje ¯ ce na vrijeme izvršavanja ˇ algoritma te mora biti efikasno izvedena kako se ne bi puno vremena potrošilo prilikom pretraživanja."
        }
      ]
    },
    {
      "name": "Abordagem heurística baseada em busca em vizinhança variável para o agrupamento balanceado de dados pelo critério da soma mínima das distâncias quadráticas",
      "url": "https://repositorio.ufrn.br/handle/123456789/21976",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name": "RODRIGO FREITAS SILVA",
      "url": "http://repositorio.ufes.br/bitstream/10/10806/1/tese_12748_Tese%20RODRIGO%20FREITAS-%202018.pdf",
      "tags": [
        {
          "name":"different-problem",
          "additionnal_infos":{
            "problem":"bucking optimization problem"
          }
        },
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        },
        {
          "name":"mention-concl-FIvsBI",
          "additionnal_infos":{
            "relevant_text":[0]
          }
        },
        {
          "name":"useDirect-FIvsBI",
          "additionnal_infos":{
            "relevant_text":[0]
          }
        }
      ],
      "extracted_informations":[
        {
          "content":"A heurística de busca local utilizada no POSF em nível de árvore individual foi a Primeira Melhora (PM). O algoritmo PM faz uma busca por toda a vizinhança e, ao encontrar uma solução melhor, a aceita, interrompe a busca, retorna a nova solução e recomeça o processo de busca. O algoritmo também é encerrado se nenhuma solução melhor for encontrada. É importante destacar que, nessa estratégia de busca, toda a vizinhança é explorada apenas no pior cenário possível, ou seja, quando nenhuma solução melhor for encontrada (HANSEN; MLADENOVIĆ, 2006; OCHOA; VEREL; TOMASSINI, 2010)."
        }
      ]
    },
    {
      "name": "Novas heurísticas para o agrupamento de dados pela soma mínima de distâncias quadráticas",
      "url": "https://repositorio.ufrn.br/handle/123456789/24010",
      "tags": [
        {
          "name": "exclLanguage",
          "additionnal_infos": {}
        }
      ]
    },
    {
      "name":"Variable Neighborhood Search: Methods and Applications",
      "url":"https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=d6416483465d523585d1e7a828611aa31c9a849f",
      "tags":[
        {
          "name":"dontUse",
          "additionnal_infos":{}
        }
      ]
    },
    {
      "name":"Adaptive Multi-operator MetaHeuristics for Quadratic Assignment Problems",
      "url":"file:///C:/Users/robin/Documents/Cours/Poly/Recherche/214581862.pdf",
      "problem":[
        
        {
          "short_name": "QAPs",
          "name": "correlated quadratic assignment problems",
          "description": "''optimal assignment of a number of facilities to a number of locations''"
        }
      ],
      "tags":[
        {
          "name":"mention-concl-FIvsBI",
          "additionnal_infos":{
            "relevant_text":[0]
          }
        },
        {
          "name":"useDirect-FIvsBI",
          "additionnal_infos":{
            "relevant_text":[0]
          }
        },
        {
          "name":"different-problem",
          "additionnal_infos":{
            "problem":"QAP"
          }
        },
        {
          "name":"diff-algorithm",
          "additionnal_infos":{
            "algorithm":"multi-operator metaheuristics"
          }
        }
      ],
      "extracted_informations":[
        {
          "content":"Also experimentally, the first improvement based metaheuristics are acknowledged to outperform the best improvement metaheuristics for some combinatorial optimization problems [6, 11]."
        },
        {"content":" We consider I(s, N ) a tuple of solutions and neighbourhood functions. There are mainly two neighbourhood exploration techniques [11]: i) the first improvement, and ii) the best improvement. The best improvement explores all the individuals in the neighbourhood of a solution and selects the best solution that impro"}
      ],
      "analysis":"Use directly former studies (FIvsBI and Bi objective Pareto local search) to choose first improvement over best improvement"
    },
    {
      "name":"Neighborhood Composition Strategies in Stochastic Local Search",
      "url":"file:///C:/Users/robin/Documents/Cours/Poly/Recherche/214581779.pdf",
      "tags":[

        {
          "name":"dontUse",
          "additional_infos":{}
        }
      ]
    },
    {
      "name":"A General Framework for Local Search Applied to the Continuous p-Median Problem",
      "url":"file:///C:/Users/robin/Downloads/ILL_READ_ONLY_REQUEST_214581149_GA0_CDN_GENERAL_FRAMEWORK_9783030191115_3.pdf",
      "problem":[
        {
          "name":"p-median problem",
          "short_name":"p-median problem",
          "description":"''The basic aim of continuous location problems is to generate facility sites in a given continuous space, usually the Euclidean plane, in order to optimize some performance measure relative to a set of given points (customers)''"
        }
      ],
      "tags":[
        {
          "name":"different-problem",
          "additionnal_infos":{
            "problem":"p-median problem"
          }
        },
        {
          "name":"mention-concl-FIvsBI",
          "additionnal_infos":{
            "relevant_text":[0]
          }
        }
      ],
      "extracted_informations":[
        {
          "content":"One might suspect as a result of Property 3.1 that all variants of G-ALT should behave in the same way. We will show briefly in the next section that this is not true; that is, different descent paths can affect the average quality of solutions obtained by different versions of G-ALT. This result is already known in other contexts. For example, Hansen and Mladenovic ( ´ 2006) demonstrate that first improvement and best improvement strategies may lead to different average solution qualities."
        }
      ]
    },
    
    
    {
      "name":"An iterated greedy algorithm for finding the minimum dominating set in graphs",
      "url": "https://www.sciencedirect.com/science/article/pii/S0378475422005055",
      "problem":[
        {
          "name":"minimum dominating set",
          "short_name":"MDS",
          "description":"''The minimum dominating set problem is to find a minimum cardinality set of vertices that dominates the entire graph''"
        }
      ],
      "tags": [
        {
          "name":"different-problem",
          "additionnal_infos":{
            "problem":"minimum dominating set"
          }
        },
        {
          "name":"mention-concl-FIvsBI",
          "additionnal_infos":{
            "relevant_text":[0]
          }
        }
      ],
      "extracted_informations":[
        {
          "content": "In this research first improvement is considered since it has been experimentally shown that it is able to reach similar results than best improvement but being less computationally demanding [3], [11]. In the context of first improvement, the order in which the neighborhood is traversed may affect the results. In order to diversify the search, we consider a random order for traversing the neighborhood."
        }
      ],
      "analysis": "Mentionne la conclusion d'Hansen mais l'utilise incorrectement (dit que les algorithmes ont des résultats similaires)"
    },
    {
      "name":"Quick generation of crosswords using concatenation",
      "url":"https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9893696&tag=1",
      "problem":[
        {
          "name":"crossword generation",
          "short_name":"crossword generation",
          "description":"''The problem of generating crossword puzzles is a well-known NP-hard problem. The goal is to find a set of words that can be placed in a grid such that each word is placed horizontally or vertically and no two words intersect''"
        }
      ],
      "tags":[
        {
          "name":"different-problem",
          "additionnal_infos":{
            "problem":"crossword generation"
          }
        },
        {
          "name":"diff-algorithm",
          "additionnal_infos":{
            "algorithm":"simulated annealing"
          }
        },
        {
          "name":"mention-concl-FIvsBI",
          "additionnal_infos":{
            "relevant_text":[0]
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "Using a simple best improvement and first improvement local search [6], one can now take multiple words and check which one fits best into the crossword. Ironically, this approach can produce undesirable  results, as in the beginning, the puzzles should focus more on expanding and not on being dense. This produces small and sparse crosswords, as there is no room for additional words. We have found three approaches to solve this issue"
        }
      ]

    },
    {
      "name":"Imitation Improvement Learning for Large-scale Capacitated Vehicle Routing Problems",
      "url":"https://openreview.net/pdf?id=K5UfKyHIBS",
      "problem":[
        {
          "name":"vehicle routing problem",
          "short_name":"VRP",
          "description":"''The vehicle routing problem (VRP) is a combinatorial optimization problem in which a fleet of vehicles must be dispatched to a set of customers in order to minimize the total cost of operations''"
        }
      ],
      "tags":[
        {
          "name":"near-tsp",
          "additionnal_infos":{
            "problem":"vehicle routing problem"
          }
        },
        {
          "name":"diff-algorithm",
          "additionnal_infos":{
            "algorithm":"deep RL"
          }
        },
        {
          "name":"dontUse",
          "additionnal_infos":{
          }
        }
      ],
      "extracted_informations": [
        {
          "content": "However, in local search algorithms, the quality of the initial solution usually affects the quality of the final solution, i.e. local search methods can easily get stuck in local optima (Hansen & Mladenovi ́c, 2006)."
        }
      ]
    },
     {
      "name":"Models and methods for the Slab Stack Shuffling problem",
      "url":"https://aisberg.unibg.it/retrieve/e40f7b8a-1a37-afca-e053-6605fe0aeaf2/Tesi%20di%20Manuel%20Cavola.pdf",
      "type":"thesis",
      "problem":[
        {
          "name":"slab stack shuffling problem",
          "short_name":"SSSP",
          "description":"''The Slab Stack Shuffling Problem (SSSP) is a combinatorial optimization problem that arises in the steel industry. The problem consists in finding a sequence of operations that rearranges a set of slabs in a stack in order to minimize the total cost of operations''"
        }
      ],
      "tags":[
        {
          "name":"different-problem",
          "additionnal_infos":{
            "problem":"slab stack shuffling problem"
          }
        },
        {
          "name": "dontUse",
          "additionnal_infos": {
          }
        }
      ],
      "extracted_informations":[]
     },
     {
      "name": "Variable Neighborhood Search Heuristics for the MaxMinSum (p-Dispersion-Sum) Problem",
      "url": "https://www.gerad.ca/fr/papers/1873.pdf",
      "problem": [
        {
          "name": "p-dispersion-sum problem",
          "short_name": "p-dispersion-sum problem",
          "description": "''The p-dispersion-sum problem is a generalization of the well-known dispersion-sum problem. The dispersion-sum problem is a combinatorial optimization problem that arises in the steel industry. The problem consists in finding a sequence of operations that rearranges a set of slabs in a stack in order to minimize the total cost of operations''"
        }
      ],
      "tags": [
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "p-dispersion-sum problem"
          }
        },
        {
          "name":"diff-algorithm",
          "additionnal_infos":{
            "algorithm":"variable neighborhood search"
          }
        },
        {
          "name": "redoExp",
          "additionnal_infos": {
            "relevant_text":[0]
          }
        },
        {
          "name":"diffRes",
          "additionnal_infos":{
            "relevant_text":[1]
          }
        }
      ],
      "extracted_informations":[
        {
          "content":"Besides, the LocalSearch procedure can pursue a first improvement strategy (FirstI ) favoring more diversification, versus best improvement strategy (BestI ) leading to more intensification"
        },
        {
          "content":"table3"
        }
      ],
      "analysis":"Table3 shows no clear pattern following the rule of [1]. However the conclusion of [1] is never mentionned"
     },
     {
      "name":"A FRAMEWORK FOR DEVELOPMENT OF PARALLEL OPTIMIZATION ALGORITHMS",
      "url": "https://www.researchgate.net/profile/Igor-Coelho-3/publication/266632039_A_Framework_for_Developing_Parallel_Optimization_Algorithms/links/54d9669b0cf2970e4e7b71a3/A-Framework-for-Developing-Parallel-Optimization-Algorithms.pdf",
      "problem": [
        {
          "name": "traveling salesman problem",
          "short_name": "TSP",
          "description": "''The traveling salesman problem (TSP) is a combinatorial optimization problem in which a fleet of vehicles must be dispatched to a set of customers in order to minimize the total cost of operations''"
        }
      ],
      "tags": [
        {
          "name": "different-problem",
          "additionnal_infos": {
            "problem": "parallel optimization"
          }
        },
        {
          "name": "dontUse",
          "additionnal_infos": {
          }
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {
            "explanation": "only use BI for demonstration purposes"
          }
        }
      ],
      "relevant_text":[
        {
          "content":"In order to test the algorithm, we develop the Hill-Climbing heuristic [3] with a parallel best neighbor generator applied to a classical optimization problem: the Traveling Salesman Problem [4]"
        }
      ]
     },
     {
      "name":"Learning 2-Opt Heuristics for Routing Problems via Deep Reinforcement Learning",
      "url": "https://link.springer.com/article/10.1007/s42979-021-00779-2",
      "problem": [
        {
          "name": "traveling salesman problem",
          "short_name": "TSP",
          "description": "''The traveling salesman problem (TSP) is a combinatorial optimization problem in which a fleet of vehicles must be dispatched to a set of customers in order to minimize the total cost of operations''"
        }
      ],
      "tags": [
        {
          "name": "dontUse",
          "additionnal_infos": {
          }
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {
            "explanation": "only as reference to 2-opt heuristic"
          }
        }
      ],
      "relevant_text":[
      ]
     },
     {
      "name":"Confidence-Based Ant Colony Optimization for Capacitated Electric Vehicle Routing Problem With Comparison of Different Encoding Schemes",
      "url": "https://ieeexplore.ieee.org/abstract/document/9684529/references#references",
      "problem": [
        {
          "name": "traveling salesman problem",
          "short_name": "TSP",
          "description": "''The traveling salesman problem (TSP) is a combinatorial optimization problem in which a fleet of vehicles must be dispatched to a set of customers in order to minimize the total cost of operations''"
        }
      ],
      "tags": [
        {
          "name":"near-tsp",
          "additionnal_infos":{
            "problem":"capacitated electric vehicle routing problem"
          }
        },
        {
          "name": "dontUse",
          "additionnal_infos": {
            "explanation": "choice only because of performances"
          }
        }
      ],
      "relevant_text":[
        {
          "content":"Because of the complexity of each operator, the first improvement operation is applied to 2-opt* and the best improvement operation is applied to 2-opt and node-shift [50]"
        }
      ]
     },
     {
      "name":"Efficient iterated greedy for the two-dimensional bandwidth minimization problem",
      "url": "https://www.sciencedirect.com/science/article/pii/S0377221722007160",
      "problem": [
        {
          "name": "two-dimensional bandwidth minimization problem",
          "short_name": "2D-BMM",
          "description": "aims to minimize the maximum distance between each pair of adjacent vertices of the input graph when it is embedded into a grid host graph"
        }
      ],
      "tags": [
        {
          "name":"different-problem",
          "additionnal_infos":{
            "problem":"two-dimensional bandwidth minimization problem"
          }
        },
        {
          "name": "redoExp",
          "additionnal_infos": {
            "relevant_text":[0]
          }
        },
        {
          "name": "diffRes",
          "additionnal_infos": {
            "relevant_text":[2]
          }
        }
      ],
      "relevant_text":[
        {
          "content":"In this research, we study two well-known strategies to explore the proposed neighborhood: best improvement and first improvement (Hansen & Mladenović, 2006). If a local search follows the best improvement strategy it selects, at each iteration, the best possible move which produces an improvement of the current neighborhood; otherwise, in the first improvement strategy, it selects the first solution that improves the current solution. Any of them stop the search when no further improving moves can be performed. We study the effectiveness of both strategies in the experiments reported in Section 4.1."
        },
        {
          "content":"For each of the experiments carried out, we report the following metrics: the average value of the objective function (Avg. OF), the total execution time in seconds (CPU Time (s)), the average deviation to the best solution found in the experiment (Dev. (%)) and the number of best solutions found in the experiment (#Best)."
        },
        {
          "content":"First, we evaluated the exploration of the neighborhood defined by the move operator following both: a first improvement and a best improvement strategy. We found that both strategies reached the same average quality of the objective function (32.54) for the preliminary data set. However, the CPU time of the local search using a best improvement strategy was 5 times larger than using a first improvement strategy. Then, we configured our local search procedure with a first improvement strategy."
        }
      ]
     },
     {
      "name":"On a Vehicle Routing Problem with Customer Costs and Multi Depots",
      "url": "https://tud.qucosa.de/id/qucosa:83669",
      "problem": [
        {
          "name": "Vehicle Routing Problem with Customer Costs",
          "short_name": "VRPCC",
          "description": "railway maintenance scheduling"
        }
      ],
      "tags": [
        {
          "name":"near-tsp",
          "additionnal_infos":{
            "problem":"Vehicle Routing Problem with Customer Costs"
          }
        },
        {
          "name": "dontUse",
          "additionnal_infos": {
            "explanation": "only cited as reference for FI and BI"
          }
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {
            "explanation": "only cited as reference for FI and BI"
          }
        }

      ],
      "relevant_text":[
        {
          "content":"The most common local search algorithms are first and best improvement [68], simulated annealing [85] and tabu search [61]. How to apply local search to VRPs can be found, e.g., in [1, 23]"
        }
      ]
     },
     {
      "name":"Mixed-Integer Linear Programming Based Approaches for the Resource Constrained Project Scheduling Problem",
      "url": "https://repositorio.ufop.br/bitstream/123456789/11879/1/TESE_MixedIntegerProgramming.pdf",
      "problem": [
        {
          "name": "Resource Constrained Project Scheduling Problem",
          "short_name": "RCPSP",
          "description": " time-ordered schedule of jobs with corresponding execution modes, respecting precedence and resources constraints"
        }
      ],
      "tags": [
        {
          "name":"different-problem",
          "additionnal_infos":{
            "problem":"RCPSP"
          }
        },
        {
          "name": "dontUse",
          "additionnal_infos": {
            "explanation": "only cited"
          }
        },
        {
          "name": "notUsedInPaper",
          "additionnal_infos": {
            "explanation": "only cited"
          }
        }

      ],
      "relevant_text":[
      ]
     }

  ],
  "dontKnow": [],
  "not_relevant": [
    "https://proceedings.neurips.cc/paper/2020/file/11958dfee29b6709f48a9ba0387a2431-Paper.pdf",
    ["https://books.google.ca/books?hl=fr&lr=&id=kDg5AwAAQBAJ&oi=fnd&pg=PR5&ots=lPFe4-vzBY&sig=D4f-cMNO58MA_WadPM5IwIE5OmI&redir_esc=y#v=onepage&q&f=false","book"],
    ["https://link.springer.com/chapter/10.1007/978-3-031-14721-0_39","not accessible"],




    "https://www.sciencedirect.com/science/article/pii/S0360835216303382?casa_token=fDcYcCSr0ykAAAAA:Q3romnIxp4KudaOCMXxVWgZiHrZIEV0bdVn7bpuiZhdZkzKx_dNLTnovDNwqKVWonMaB_aLTX28",
    "Optframe: a computational framework for combinatorial optimization problems",
    "https://www.sciencedirect.com/science/article/pii/S0377221717303934?casa_token=bPq0ZzBRF1wAAAAA:pUUGji-AwrGQl13MP1BrYiBsrmh8yCWQJSst-gNIxS3m7ten9_3crlUzStauJNmNAshSUK-kJf4#bbib0019",
    "https://burjcdigital.urjc.es/bitstream/handle/10115/5265/Thesis_F_Javier_Martin_Campo__Printed_version.pdf?sequence=1&isAllowed=y",
    "http://proceedings.mlr.press/v129/costa20a/costa20a.pdf",
    "https://www.tandfonline.com/doi/pdf/10.1080/00224065.2015.11918129?casa_token=DENp8dSdGg8AAAAA:X1mW9AQj4hw3Ra3DKTqDcQM7HJCs4OLH54b24sbUlu1xiZTqt0a974edxJjnX9ItRpFJE_l5kyWGnw",
    "http://www-desir.lip6.fr/~lustt/Thesis/Main290610.pdf",
    "https://arxiv.org/pdf/2004.01608.pdf",
    "https://www.sciencedirect.com/science/article/pii/S0305054819301339?casa_token=hiW6OhrJeOgAAAAA:buYsU9gbuGh37loJ2FUhObyQcm3dHzEPO6z_nLv8DPC-6ZBAsoO-Z5yrRGWezK_fIrL70fUUxtY",
    "https://tel.archives-ouvertes.fr/tel-01201647/document",
    "https://www.sciencedirect.com/science/article/pii/S0305054820302331?casa_token=ci_rleTi-_oAAAAA:JCPSybaWQNcy9wOxd-pRvL-dzm6nMMGpCCCHJE-VrjtZbCQHzd2Mz6aK0okSj5MDUKqh5wBKOZY",
    "https://etheses.whiterose.ac.uk/19011/1/finalThesisv3.pdf",
    "https://link.springer.com/content/pdf/10.1007/s12652-021-03510-4.pdf",
    "https://arxiv.org/pdf/2109.08345.pdf",
    "https://dl.acm.org/doi/pdf/10.1145/3230905.3230953?casa_token=3HXxvzYeeJkAAAAA:3x2SJCNyZ9046lCMdO8mO8e9IFyLWC0T5Nu5fV25DJzEYKmSAM-3oaNQTkqJ5vUS3rcqfa8KxmVORw",
    "https://tel.archives-ouvertes.fr/tel-03591753/document",
    "https://tel.archives-ouvertes.fr/tel-01127048/document",
    "https://tel.archives-ouvertes.fr/tel-01609160/document",
    "Theoretical and Practical Contributions on Scatter Search",
    "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.334.9849&rep=rep1&type=pdf",
    [
      "https://www.diva-portal.org/smash/get/diva2:1241900/FULLTEXT01.pdf",
      "does not mention / study nor use property "
    ],
    [
      "https://iwaciii2021.bit.edu.cn/docs/2021-12/6e9715ac00374131a9d4fc14c7cf223a.pdf",
      "use first improvement with improved solution (only test this possibility)"
    ],
    [
      "https://www.researchgate.net/profile/Hande-Erol/publication/273305894_New_Variable_Neighborhood_Search_Structure_for_Travelling_Salesman_Problems/links/56eec0ab08aea35d5b9a12ea/New-Variable-Neighborhood-Search-Structure-for-Travelling-Salesman-Problems.pdf",
      "only cite publication as TSP variants without going into details. "
    ],
    [
      "https://dr.ntu.edu.sg/bitstream/10356/62106/1/PhD%20Thesis%20%28Wang%20Wenjie%29.pdf?termsofuse=on&g-recaptcha-response=03AGdBq25NcGYqmiueBE2bRpJrYZvvBdxTIFfsq2LWR3bklc8nRdQyBbpKdRxO4UX6GvatYJXuUDvr57sM282j3KL0MV9xFfFPazDEdPNJGBhJeVAECZ_y_u1J1eUfvIYpzQU6V7MHuTS6N2yA4mwl5196EhuYoq1VcCEr-mt1syTRdJ2uMHTMivOEURQOsbHmXN07EHAtM0tH4LxgwGMHvlU3P6NT3FKmqQKp6X8lWagX6rjqymDuhRZlFx9DhUPpyWd1lByQFx_a6UuFs0yOidwMucFWr_V3-_p0kdA0eBPVKeYUmj9gIaH0WE1wo7IAcE8rFshdxi2WtyxvrfMnoauAf_jb6t68j1IrrjxIw6lRL3tbU_RlvPn-u-gtgj-gGBN5xgjwFKsOVIyI94vp3AF4LsUyHDxTmZAyJqNTiWKmheUuAN5IO7Kxe9isosJifLvzpADTo0KR60jy2BCwQdJ9azFfQr4s-A&submit=true",
      "only use FIvsBI publication as a reference for first and best improvement"
    ],
    [
      "https://thesis.eur.nl/pub/17112/Brouwer.pdf",
      "does not speak about the property"
    ],
    [
      "https://tsukuba.repo.nii.ac.jp/record/32584/file_preview/DA06862.pdf?allow_aggs=False",
      "Ant system algorithm"
    ],
    [
      "https://ous.repo.nii.ac.jp/?action=repository_action_common_download&item_id=2284&item_no=1&attribute_id=18&file_no=1",
      "Only cite FIvsBI for reference purpose for Fi and BI algorithms. Choose BI arbitrarly"
    ],
    "http://www.portalabpg.org.br/site_portugues/anais/anais4/resumos/4PDPETRO_3_1_0456-1.pdf",
    "https://repositorio.ufpb.br/handle/tede/8157",
    "http://www.din.uem.br/sbpo/sbpo2017/pdf/169370.pdf",
    "https://www.sciencedirect.com/science/article/pii/S0305054809000173?casa_token=xRgibR1rSlUAAAAA:Y9vzJ14AhaDR7fJN76UQ3f6i_VYkRgLwXVFUKlJwsyJjV6nYbuscmiWEfmx4248b8EJxhq7lhZY"
  ],
  "to_be_further_explored": [
    "https://tel.archives-ouvertes.fr/tel-01273425/document"
  ],
  "todo": [
    "https://www.semanticscholar.org/paper/A-general-variable-neighborhood-search-variants-for-Todosijevi%C4%87-Mjirda/5344b3ca5fa60b117076becd851064d2b5ab6544",
    ""
  ]
}
